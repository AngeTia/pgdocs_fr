<!-- doc/src/sgml/auth-delay.sgml -->

<sect1 id="auth-delay">
 <title>auth_delay</title>

 <indexterm zone="auth-delay">
  <primary>auth_delay</primary>
 </indexterm>

 <para>
  <filename>auth_delay</filename> fait que le serveur observe une pause brève
  avant de rapporter une erreur d'authentification. Cela rend les attaques par
  force brute plus difficile. Notez que cela n'empêche en rien les attaques
  par déni de service et pourrait même les exacerber car les processus en
  attente du rapport de l'échec d'authentification consomment toujours des
  connexions.
 </para>

 <para>
  Pour fonctionner, ce module doit être chargé grâce au paramètre
  <xref linkend="guc-shared-preload-libraries"/> du <filename>postgresql.conf</filename>.
 </para>

 <sect2>
  <title>Paramètres de configuration</title>

  <variablelist>
   <varlistentry>
    <term>
     <varname>auth_delay.milliseconds</varname> (<type>int</type>)
    </term>
    <indexterm>
     <primary>paramètre de configuration <varname>auth_delay.milliseconds</varname></primary>
    </indexterm>
    <listitem>
     <para>
      Le nombre de millisecondes à attendre avant de rapporter une erreur
      d'authentification. La valeur par défaut est 0.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Pour configurer ces paramètres dans votre fichier <filename>postgresql.conf</filename>,
   vous devez ajouter <literal>auth_delay</literal> à
   <xref linkend="guc-custom-variable-classes"/>. Voici un exemple d'utilisation
   typique&nbsp;:
  </para>

<programlisting>
# postgresql.conf
shared_preload_libraries = 'auth_delay'

custom_variable_classes = 'auth_delay'
auth_delay.milliseconds = '500'
</programlisting>
 </sect2>

 <sect2>
  <title>Auteur</title>

  <para>
   KaiGai Kohei <email>kaigai@ak.jp.nec.com</email>
  </para>
 </sect2>

</sect1>
