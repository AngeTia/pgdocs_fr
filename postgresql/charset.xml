<?xml version="1.0" encoding="UTF-8"?>
<chapter id="charset">
 <title>Localisation</title>

 <para>
  Ce chapitre décrit, du point de vue de l'administrateur, les fonctionnalités
  de régionalisation (ou localisation) disponibles.
  <productname>PostgreSQL</productname> fournit deux approches
  différentes pour la gestion de la localisation&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      l'utilisation des fonctionnalités de locales du système d'exploitation pour 
      l'ordonnancement du tri, le formatage des chiffres, les messages
      traduits et autres aspects spécifiques à la locale.
      This is covered in <xref linkend="locale"/> and
      <xref linkend="collation"/>.&nbsp;;
     </para>
    </listitem>

    <listitem>
     <para>
      la fourniture d'un certain nombre d'encodages différents pour permettre
      le stockage de texte dans toutes les langues et fournir la traduction de
      l'encodage entre serveur et client.
      This is covered in <xref linkend="multibyte"/>.
     </para>
    </listitem>
   </itemizedlist>
  </para>


 <sect1 id="locale">
  <title>Support des locales</title>
  
  <indexterm zone="locale"><primary>locale</primary></indexterm>

  <para>
   Le support des <firstterm>locales</firstterm> fait référence à une application
   respectant les préférences culturelles au regard des alphabets,
   du tri, du format des nombres, etc.  <productname>PostgreSQL</productname> utilise
   les possibilités offertes par C et <acronym>POSIX</acronym> du standard
   ISO fournies par le système d'exploitation du serveur. Pour plus d'informations,
   consulter la documentation du système.
  </para>

  <sect2>
   <title>Aperçu</title>

   <para>
    Le support des locales est automatiquement déclenché lorsqu'un cluster de 
    base de données est créé avec <command>initdb</command>.
    <command>initdb</command> initialise le cluster avec la valeur des
    locales de son environnement d'exécution par défaut. Si le système est
    déjà paramétré pour utiliser la locale souhaitée pour le cluster, il n'y
    a donc rien d'autre à faire. Si une locale différente est souhaitée (ou
    que celle utilisée par le serveur n'est pas connue avec certitude), il
    est possible d'indiquer à <command>initdb</command> la locale à
    utiliser à l'aide de l'option <option>--locale</option>.
    Par exemple&nbsp;:
<screen>initdb --locale=sv_SE</screen>
   </para>

   <para>
    Cet exemple pour les systèmes Unix positionne la locale au suédois
    (<literal>sv</literal>) tel que parlé en
    Suède (<literal>SE</literal>). Parmi les autres possibilités, on peut
    inclure <literal>en_US</literal> (l'anglais américain) ou
    <literal>fr_CA</literal> (français canadien). Si plus d'un ensemble de
    caractères peuvent être utilisés pour une locale, alors les spécifications
    peuvent prendre la forme <replaceable>langage_territoire.codeset</replaceable>.
    Par exemple, <literal>fr_BE.UTF-8</literal> représente la langue française
    telle qu'elle est parlée en Belgique (BE), avec un encodage
    <acronym>UTF-8</acronym>.
   </para>

   <para>
    Les locales
    disponibles et leurs noms dépendent de l'éditeur du système d'exploitation
    et de ce qui est installé. Sur la plupart des systèmes Unix, la commande
    <literal>locale -a</literal> fournit la liste des locales disponibles.
    Windows utilise des noms de locale plus verbeux, comme
    <literal>German_Germany</literal> ou <literal>Swedish_Sweden.1252</literal>
    mais le principe est le même.
   </para>

   <para>
    Il est parfois utile de mélanger les règles de plusieurs
    locales, par exemple d'utiliser les règles de tri anglais avec des messages en
    espagnol. Pour cela, des sous-catégories de locales existent
    qui ne contrôlent que certains aspects des règles de localisation&nbsp;:

    <informaltable>
     <tgroup cols="2">
     <colspec colnum="1" colwidth="0.4*"/>
     <colspec colnum="2" colwidth="1.6*"/>
      <tbody>
       <row>
        <entry><envar>LC_COLLATE</envar></entry>
        <entry>Ordre de tri des chaînes de caractères</entry>
       </row>
       <row>
        <entry><envar>LC_CTYPE</envar></entry>
        <entry>Classification de caractères (Qu'est-ce qu'une lettre&nbsp;?
         La majuscule équivalente&nbsp;?)</entry>
       </row>
       <row>
        <entry><envar>LC_MESSAGES</envar></entry>
        <entry>Langue des messages</entry>
       </row>
       <row>
        <entry><envar>LC_MONETARY</envar></entry>
        <entry>Formatage des valeurs monétaires</entry>
       </row>
       <row>
        <entry><envar>LC_NUMERIC</envar></entry>
        <entry>Formatage des nombres</entry>
       </row>
       <row>
        <entry><envar>LC_TIME</envar></entry>
        <entry>Formatage des dates et heures</entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

    Les noms des catégories se traduisent en noms d'options
    <command>initdb</command> pour surcharger le choix de locale
    pour une catégorie donnée. Par exemple, pour utiliser la locale
    français canadien avec des règles américaines pour le
    formatage monétaire, on utilise
    <literal>initdb --locale=fr_CA --lc-monetary=en_US</literal>.
   </para>

   <para>
    Pour bénéficier d'un système qui se comporte comme s'il ne disposait pas du
    support des locales, on utilise les locales spéciales <literal>C</literal>
    ou un équivalent, <literal>POSIX</literal>.
   </para>

   <para>
    Certaines catégories de locales doivent fixer leur valeurs lors de la
    création de la base de données. Vous pouvez utiliser des paramétrages
    différents pour chaque bases de données. Par contre, une fois que la base
    est créée, les paramétrages de locales ne peuvent plus être modifiés.
    <literal>LC_COLLATE</literal> et <literal>LC_CTYPE</literal> sont
    ces catégories. Elles affectent l'ordre de tri des index et doivent donc
    rester inchangées, les index sur les colonnes de texte risquant d'être
    corrompus dans le cas contraire.
    (But you can alleviate this restriction using collations, as discussed
    in <xref linkend="collation"/>.)
    La valeur par défaut pour ces catégories
    est déterminée lors de l'exécution d'<command>initdb</command>. Ces valeurs
    sont utilisées quand de nouvelles bases de données sont créées, sauf si
    d'autres valeurs sont indiquées avec la commande <command>CREATE
    DATABASE</command>.
   </para>

   <para>
    Les autres catégories de locale peuvent être modifiées à n'importe quel
    moment en configurant les variables d'environnement de même nom (voir la
    <xref linkend="runtime-config-client-format"/> pour de plus amples
    détails). Les valeurs par défaut choisies par
    <command>initdb</command> sont en fait écrites dans le fichier de
    configuration <filename>postgresql.conf</filename> pour servir de
    valeurs par défaut au démarrage du serveur. Si ces déclarations sont
    supprimées du fichier <filename>postgresql.conf</filename>, le serveur
    hérite des paramètres de son environnement d'exécution.
   </para>

   <para>
    Le comportement des locales du serveur est déterminé par les
    variables d'environnement vues par le serveur, pas par celles de
    l'environnement d'un quelconque client. Il est donc important de 
    configurer les bons paramètres de locales avant le démarrage du serveur.
    Cela a pour conséquence que, si les locales du client et du serveur
    diffèrent, les messages peuvent apparaître dans des langues différentes
    en fonction de leur provenance.
   </para>

   <note>
    <para>
     Hériter la locale de l'environnement d'exécution signifie, sur la 
     plupart des systèmes d'exploitation, la chose suivante&nbsp;:
     pour une catégorie de locales donnée (l'ordonnancement par exemple)
     les variables d'environnement <envar>LC_ALL</envar>,
     <envar>LC_COLLATE</envar> (ou la variable qui correspond à la catégorie)
     et <envar>LANG</envar> sont consultées dans cet ordre jusqu'à en
     trouver une qui est fixée. Si aucune de ces variables n'est fixée,
     c'est la locale par défaut, <literal>C</literal>, qui est utilisée.
    </para>

    <para>
     Certaines bibliothèques de localisation regardent aussi la variable
     d'environnement <envar>LANGUAGE</envar> qui surcharge tout autre
     paramètre pour fixer la langue des messages. En cas de doute, 
     lire la documentation du système d'exploitation,
     en particulier la partie concernant <application>gettext</application>.
    </para>
   </note>

   <para>
    Pour permettre la traduction des messages dans la langue préférée de
    l'utilisateur, <acronym>NLS</acronym> doit avoir été activé pendant la
    compilation (<literal>configure --enable-nls</literal>). Tout autre support
    de la locale est construit automatiquement.
   </para>
  </sect2>

  <sect2>
   <title>Comportement</title>

   <para>
    Le paramétrage de la locale influence les fonctionnalités SQL
    suivantes&nbsp;:

    <itemizedlist>
     <listitem>
      <para>
       l'ordre de tri dans les requêtes utilisant <literal>ORDER BY</literal>
       ou les opérateurs de comparaison standards sur des données de type
       texte&nbsp;;
       <indexterm><primary>ORDER BY</primary><secondary>et locales</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       The <function>upper</function>, <function>lower</function>, and <function>initcap</function>
       functions
       <indexterm><primary>upper</primary><secondary>and locales</secondary></indexterm>
       <indexterm><primary>lower</primary><secondary>and locales</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       Pattern matching operators (<literal>LIKE</literal>, <literal>SIMILAR TO</literal>,
       and POSIX-style regular expressions); locales affect both case
       insensitive matching and the classification of characters by
       character-class regular expressions
       <indexterm><primary>LIKE</primary><secondary>and locales</secondary></indexterm>
       <indexterm><primary>regular expressions</primary><secondary>and locales</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       la famille de fonctions <function>to_char</function>.
       <indexterm><primary>to_char</primary><secondary>et locales</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       The ability to use indexes with <literal>LIKE</literal> clauses
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    Le support des locales autres que <literal>C</literal> ou
    <literal>POSIX</literal> dans <productname>PostgreSQL</productname> a
    pour inconvénient son impact sur les performances. Il ralentit la gestion
    des caractères et empêche l'utilisation des index ordinaires par
    <literal>LIKE</literal>. Pour cette raison, il est préférable de
    n'utiliser les locales qu'en cas de réel besoin.
   </para>

   <para>
    Toutefois, pour permettre à <productname>PostgreSQL</productname> d'utiliser
    des index avec les clauses <literal>LIKE</literal> et une locale
    différente de <literal>C</literal>, il existe plusieurs classes
    d'opérateurs personnalisées. Elles permettent
    la création d'un index qui réalise une stricte comparaison caractère par
    caractère, ignorant les règles de comparaison des locales. Se référer à
    la <xref linkend="indexes-opclass"/> pour plus d'informations. Another approach is to create indexes using
    the <literal>C</literal> collation, as discussed in
    <xref linkend="collation"/>.
   </para>
  </sect2>

  <sect2>
   <title>Problèmes</title>

   <para>
    Si le support des locales ne fonctionne pas au regard des explications ci-dessus,
    il faut vérifier que le support des locales du système d'exploitation est
    correctement configuré. Pour vérifier les locales installées sur
    le système, on peut utiliser la commande <literal>locale -a</literal>,
    si elle est fournie avec le système d'exploitation.
   </para>

   <para>
    Il faut vérifier que <productname>PostgreSQL</productname> utilise
    effectivement la locale supposée. Les paramètres <envar>LC_COLLATE</envar>
    et <envar>LC_CTYPE</envar> sont déterminés lors de la création de la base
    de données et ne peuvent pas être modifiés sauf en créant une nouvelle
    base de données.
    D'autres paramètres de locale, y compris <envar>LC_MESSAGES</envar> et
    <envar>LC_MONETARY</envar>, sont déterminés initialement par
    l'environnement dans lequel le serveur est lancé mais peuvent être
    modifiés pendant l'exécution. Pour vérifier le paramétrage
    de la locale active on utilise la commande <command>SHOW</command>.
   </para>

   <para>
    Le répertoire <filename>src/test/locale</filename> de la distribution 
    source contient une série de tests pour le support des locales dans
    <productname>PostgreSQL</productname>.
   </para>

   <para>
    Les applications clientes qui gèrent les erreurs en provenance du
    serveur par l'analyse du texte du message d'erreur vont certainement
    éprouver des difficultés lorsque les messages du serveur sont dans une langue
    différente. Les auteurs de telles applications sont
    invités à utiliser le schéma de code d'erreur à la place.
   </para>

   <para>
    Le maintien de catalogues de traductions de messages nécessitent les
    efforts permanents de beaucoup de volontaires qui souhaitent voir
    <productname>PostgreSQL</productname> parler correctement leur langue 
    préférée. Si certains messages dans une langue ne sont pas disponibles ou
    pas complètement traduits, toute aide est la bienvenue. Pour apporter
    son aide à ce projet, consulter le <xref linkend="nls"/> ou écrire à
    la liste de diffusion des développeurs.
   </para>
  </sect2>
 </sect1>


 <sect1 id="collation">
  <title>Collation Support</title>

  <indexterm zone="collation"><primary>collation</primary></indexterm>

  <para>
   The collation feature allows specifying the sort order and character
   classification behavior of data per-column, or even per-operation.
   This alleviates the restriction that the
   <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol> settings
   of a database cannot be changed after its creation.
  </para>

  <sect2>
   <title>Concepts</title>

   <para>
    Conceptually, every expression of a collatable data type has a
    collation.  (The built-in collatable data types are
    <type>text</type>, <type>varchar</type>, and <type>char</type>.
    User-defined base types can also be marked collatable, and of course
    a domain over a collatable data type is collatable.)  If the
    expression is a column reference, the collation of the expression is the
    defined collation of the column.  If the expression is a constant, the
    collation is the default collation of the data type of the
    constant.  The collation of a more complex expression is derived
    from the collations of its inputs, as described below.
   </para>

   <para>
    The collation of an expression can be the <quote>default</quote>
    collation, which means the locale settings defined for the
    database.  It is also possible for an expression's collation to be
    indeterminate.  In such cases, ordering operations and other
    operations that need to know the collation will fail.
   </para>

   <para>
    When the database system has to perform an ordering or a character
    classification, it uses the collation of the input expression.  This
    happens, for example, with <literal>ORDER BY</literal> clauses
    and function or operator calls such as <literal>&lt;</literal>.
    The collation to apply for an <literal>ORDER BY</literal> clause
    is simply the collation of the sort key.  The collation to apply for a
    function or operator call is derived from the arguments, as described
    below.  In addition to comparison operators, collations are taken into
    account by functions that convert between lower and upper case
    letters, such as <function>lower</function>, <function>upper</function>, and
    <function>initcap</function>; by pattern matching operators; and by
    <function>to_char</function> and related functions.
   </para>

   <para>
    For a function or operator call, the collation that is derived by
    examining the argument collations is used at run time for performing
    the specified operation.  If the result of the function or operator
    call is of a collatable data type, the collation is also used at parse
    time as the defined collation of the function or operator expression,
    in case there is a surrounding expression that requires knowledge of
    its collation.
   </para>

   <para>
    The <firstterm>collation derivation</firstterm> of an expression can be
    implicit or explicit.  This distinction affects how collations are
    combined when multiple different collations appear in an
    expression.  An explicit collation derivation occurs when a
    <literal>COLLATE</literal> clause is used; all other collation
    derivations are implicit.  When multiple collations need to be
    combined, for example in a function call, the following rules are
    used:

    <orderedlist>
     <listitem>
      <para>
       If any input expression has an explicit collation derivation, then
       all explicitly derived collations among the input expressions must be
       the same, otherwise an error is raised.  If any explicitly
       derived collation is present, that is the result of the
       collation combination.
      </para>
     </listitem>

     <listitem>
      <para>
       Otherwise, all input expressions must have the same implicit
       collation derivation or the default collation.  If any non-default
       collation is present, that is the result of the collation combination.
       Otherwise, the result is the default collation.
      </para>
     </listitem>

     <listitem>
      <para>
       If there are conflicting non-default implicit collations among the
       input expressions, then the combination is deemed to have indeterminate
       collation.  This is not an error condition unless the particular
       function being invoked requires knowledge of the collation it should
       apply.  If it does, an error will be raised at run-time.
      </para>
     </listitem>
    </orderedlist>

    For example, consider this table definition:
<programlisting>
CREATE TABLE test1 (
    a text COLLATE "de_DE",
    b text COLLATE "es_ES",
    ...
);
</programlisting>

    Then in
<programlisting>
SELECT a &lt; 'foo' FROM test1;
</programlisting>
    the <literal>&lt;</literal> comparison is performed according to
    <literal>de_DE</literal> rules, because the expression combines an
    implicitly derived collation with the default collation.  But in
<programlisting>
SELECT a &lt; ('foo' COLLATE "fr_FR") FROM test1;
</programlisting>
    the comparison is performed using <literal>fr_FR</literal> rules,
    because the explicit collation derivation overrides the implicit one.
    Furthermore, given
<programlisting>
SELECT a &lt; b FROM test1;
</programlisting>
    the parser cannot determine which collation to apply, since the
    <structfield>a</structfield> and <structfield>b</structfield> columns have conflicting
    implicit collations.  Since the <literal>&lt;</literal> operator
    does need to know which collation to use, this will result in an
    error.  The error can be resolved by attaching an explicit collation
    specifier to either input expression, thus:
<programlisting>
SELECT a &lt; b COLLATE "de_DE" FROM test1;
</programlisting>
    or equivalently
<programlisting>
SELECT a COLLATE "de_DE" &lt; b FROM test1;
</programlisting>
    On the other hand, the structurally similar case
<programlisting>
SELECT a || b FROM test1;
</programlisting>
    does not result in an error, because the <literal>||</literal> operator
    does not care about collations: its result is the same regardless
    of the collation.
   </para>

   <para>
    The collation assigned to a function or operator's combined input
    expressions is also considered to apply to the function or operator's
    result, if the function or operator delivers a result of a collatable
    data type.  So, in
<programlisting>
SELECT * FROM test1 ORDER BY a || 'foo';
</programlisting>
    the ordering will be done according to <literal>de_DE</literal> rules.
    But this query:
<programlisting>
SELECT * FROM test1 ORDER BY a || b;
</programlisting>
    results in an error, because even though the <literal>||</literal> operator
    doesn't need to know a collation, the <literal>ORDER BY</literal> clause does.
    As before, the conflict can be resolved with an explicit collation
    specifier:
<programlisting>
SELECT * FROM test1 ORDER BY a || b COLLATE "fr_FR";
</programlisting>
   </para>
  </sect2>

  <sect2>
   <title>Managing Collations</title>

   <para>
    A collation is an SQL schema object that maps an SQL name to
    operating system locales.  In particular, it maps to a combination
    of <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>.  (As
    the name would suggest, the main purpose of a collation is to set
    <symbol>LC_COLLATE</symbol>, which controls the sort order.  But
    it is rarely necessary in practice to have an
    <symbol>LC_CTYPE</symbol> setting that is different from
    <symbol>LC_COLLATE</symbol>, so it is more convenient to collect
    these under one concept than to create another infrastructure for
    setting <symbol>LC_CTYPE</symbol> per expression.)  Also, a collation
    is tied to a character set encoding (see <xref linkend="multibyte"/>).
    The same collation name may exist for different encodings.
   </para>

   <para>
    On all platforms, the collations named <literal>default</literal>,
    <literal>C</literal>, and <literal>POSIX</literal> are available.  Additional
    collations may be available depending on operating system support.
    The <literal>default</literal> collation selects the <symbol>LC_COLLATE</symbol>
    and <symbol>LC_CTYPE</symbol> values specified at database creation time.
    The <literal>C</literal> and <literal>POSIX</literal> collations both specify
    <quote>traditional C</quote> behavior, in which only the ASCII letters
    <quote><literal>A</literal></quote> through <quote><literal>Z</literal></quote>
    are treated as letters, and sorting is done strictly by character
    code byte values.
   </para>

   <para>
    If the operating system provides support for using multiple locales
    within a single program (<function>newlocale</function> and related functions),
    then when a database cluster is initialized, <command>initdb</command>
    populates the system catalog <literal>pg_collation</literal> with
    collations based on all the locales it finds on the operating
    system at the time.  For example, the operating system might
    provide a locale named <literal>de_DE.utf8</literal>.
    <command>initdb</command> would then create a collation named
    <literal>de_DE.utf8</literal> for encoding <literal>UTF8</literal>
    that has both <symbol>LC_COLLATE</symbol> and
    <symbol>LC_CTYPE</symbol> set to <literal>de_DE.utf8</literal>.
    It will also create a collation with the <literal>.utf8</literal>
    tag stripped off the name.  So you could also use the collation
    under the name <literal>de_DE</literal>, which is less cumbersome
    to write and makes the name less encoding-dependent.  Note that,
    nevertheless, the initial set of collation names is
    platform-dependent.
   </para>

   <para>
    In case a collation is needed that has different values for
    <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>, a new
    collation may be created using
    the <xref linkend="sql-createcollation"/> command.  That command
    can also be used to create a new collation from an existing
    collation, which can be useful to be able to use
    operating-system-independent collation names in applications.
   </para>

   <para>
    Within any particular database, only collations that use that
    database's encoding are of interest.  Other entries in
    <literal>pg_collation</literal> are ignored.  Thus, a stripped collation
    name such as <literal>de_DE</literal> can be considered unique
    within a given database even though it would not be unique globally.
    Use of the stripped collation names is recommendable, since it will
    make one less thing you need to change if you decide to change to
    another database encoding.  Note however that the <literal>default</literal>,
    <literal>C</literal>, and <literal>POSIX</literal> collations can be used
    regardless of the database encoding.
   </para>

   <para>
    <productname>PostgreSQL</productname> considers distinct collation
    objects to be incompatible even when they have identical properties.
    Thus for example,
<programlisting>
SELECT a COLLATE "C" &lt; b COLLATE "POSIX" FROM test1;
</programlisting>
    will draw an error even though the <literal>C</literal> and <literal>POSIX</literal>
    collations have identical behaviors.  Mixing stripped and non-stripped
    collation names is therefore not recommended.
   </para>
  </sect2>
 </sect1>


 <sect1 id="multibyte">
  <title>Support des jeux de caractères</title>

  <indexterm zone="multibyte"><primary>jeu de caractère</primary></indexterm>

  <para>
   Le support des jeux de caractères dans <productname>PostgreSQL</productname>
   permet d'insérer du texte dans différents jeux de caractères (aussi appelés
   encodages), dont
   ceux mono-octet tels que la série ISO 8859 et ceux multi-octets tels que
   <acronym>EUC</acronym> (Extended Unix Code), UTF-8 ou le codage interne Mule.
   Tous les jeux de caractères supportés peuvent être utilisés de façon
   transparente par les clients mais certains ne sont pas supportés par le
   serveur (c'est-à-dire comme encodage du serveur).
   Le jeu de caractères par défaut est sélectionné pendant l'initialisation
   du cluster de base de données avec <command>initdb</command>. Ce choix peut
   être surchargé à la création de la base. Il est donc possible de disposer
   de bases utilisant chacune un jeu de caractères différent.
  </para>

  <para>
   Il existe, cependant une importante restriction&nbsp;: le jeu de caractère
   de la base de données doit être compatible avec les variables
   d'environnement <envar>LC_CTYPE</envar> (classification des caractères) et
   <envar>LC_COLLATE</envar> (ordre de tri des chaînes) de la base de données.
   Pour les locales <literal>C</literal> ou <literal>POSIX</literal>, tous
   les jeux de caractères sont autorisés, mais pour les locales,
   il n'y a qu'un seul jeux de caractères qui fonctionne correctement.
   (Néanmoins, sur Windows, l'encodage UTF-8 peut être utilisé avec toute
   locale.)
  </para>

   <sect2 id="multibyte-charset-supported">
    <title>Jeux de caractères supportés</title>

    <para>
     Le <xref linkend="charset-table"/> présente les jeux de caractères
     utilisables avec <productname>PostgreSQL</productname>.
    </para>

     <table id="charset-table">
      <title>Jeux de caractères de <productname>PostgreSQL</productname></title>
      <tgroup cols="5">
       <colspec colnum="1" colwidth="0.8*"/>
       <colspec colnum="2" colwidth="1.4*"/>
       <colspec colnum="3" colwidth="1*"/>
       <colspec colnum="4" colwidth="0.2*"/>
       <colspec colnum="5" colwidth="0.7*"/>
       <colspec colnum="6" colwidth="1.1*"/>
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Description</entry>
         <entry>Langue</entry>
         <entry>Serveur&nbsp;?</entry>
         <!--
          The Bytes/Char field is populated by looking at the values returned
          by pg_wchar_table.mblen function for each encoding.
         -->
         <entry>Octets/Caractère</entry>
         <entry>Alias</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>BIG5</literal></entry>
         <entry>Big Five</entry>
         <entry>Chinois traditionnel</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry><literal>WIN950</literal>, <literal>Windows950</literal></entry>
        </row>
        <row>
         <entry><literal>EUC_CN</literal></entry>
         <entry>Code-CN Unix étendu</entry>
         <entry>Chinois simplifié</entry>
         <entry>Oui</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JP</literal></entry>
         <entry>Code-JP Unix étendu</entry>
         <entry>Japonais</entry>
         <entry>Oui</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JIS_2004</literal></entry>
         <entry>Code-JP Unix étendu, JIS X 0213</entry>
         <entry>Japonais</entry>
         <entry>Oui</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_KR</literal></entry>
         <entry>Code-KR Unix étendu</entry>
         <entry>Coréen</entry>
         <entry>Oui</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_TW</literal></entry>
         <entry>Code-TW Unix étendu</entry>
         <entry>Chinois traditionnel, taïwanais</entry>
         <entry>Oui</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GB18030</literal></entry>
         <entry>Standard national</entry>
         <entry>Chinois</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GBK</literal></entry>
         <entry>Standard national étendu</entry>
         <entry>Chinois simplifié</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry><literal>WIN936</literal>, <literal>Windows936</literal></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_5</literal></entry>
         <entry>ISO 8859-5, <acronym>ECMA</acronym> 113</entry>
         <entry>Latin/Cyrillique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_6</literal></entry>
         <entry>ISO 8859-6, <acronym>ECMA</acronym> 114</entry>
         <entry>Latin/Arabe</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_7</literal></entry>
         <entry>ISO 8859-7, <acronym>ECMA</acronym> 118</entry>
         <entry>Latin/Grec</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_8</literal></entry>
         <entry>ISO 8859-8, <acronym>ECMA</acronym> 121</entry>
         <entry>Latin/Hébreu</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>JOHAB</literal></entry>
         <entry><acronym>JOHAB</acronym></entry>
         <entry>Koréen (Hangul)</entry>
         <entry>Non</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>KOI8</literal></entry>
         <entry><acronym>KOI</acronym>8-R(U)</entry>
         <entry>Cyrillique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>KOI8R</literal></entry>
        </row>
        <row>
         <entry><literal>KOI8R</literal></entry>
         <entry><acronym>KOI</acronym>8-R</entry>
         <entry>Cyrillique (Russie)</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>KOI8</literal></entry>
        </row>
        <row>
         <entry><literal>KOI8U</literal></entry>
         <entry><acronym>KOI</acronym>8-U</entry>
         <entry>Cyrillique (Ukraine)</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>LATIN1</literal></entry>
         <entry>ISO 8859-1, <acronym>ECMA</acronym> 94</entry>
         <entry>Europe de l'ouest</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO88591</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN2</literal></entry>
         <entry>ISO 8859-2, <acronym>ECMA</acronym> 94</entry>
         <entry>Europe centrale</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO88592</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN3</literal></entry>
         <entry>ISO 8859-3, <acronym>ECMA</acronym> 94</entry>
         <entry>Europe du sud</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO88593</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN4</literal></entry>
         <entry>ISO 8859-4, <acronym>ECMA</acronym> 94</entry>
         <entry>Europe du nord</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO88594</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN5</literal></entry>
         <entry>ISO 8859-9, <acronym>ECMA</acronym> 128</entry>
         <entry>Turque</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO88599</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN6</literal></entry>
         <entry>ISO 8859-10, <acronym>ECMA</acronym> 144</entry>
         <entry>Nordique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO885910</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN7</literal></entry>
         <entry>ISO 8859-13</entry>
         <entry>Baltique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO885913</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN8</literal></entry>
         <entry>ISO 8859-14</entry>
         <entry>Celtique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO885914</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN9</literal></entry>
         <entry>ISO 8859-15</entry>
         <entry><literal>ISO885915</literal> avec l'Euro et les accents</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry>ISO885915</entry>
        </row>
        <row>
         <entry><literal>LATIN10</literal></entry>
         <entry>ISO 8859-16, <acronym>ASRO</acronym> SR 14111</entry>
         <entry>Roumain</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ISO885916</literal></entry>
        </row>
        <row>
         <entry><literal>MULE_INTERNAL</literal></entry>
         <entry>Code interne Mule</entry>
         <entry>Emacs multi-langues</entry>
         <entry>Oui</entry>
         <entry>1-4</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SJIS</literal></entry>
         <entry>Shift JIS</entry>
         <entry>Japonais</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry><literal>Mskanji</literal>, <literal>ShiftJIS</literal>, <literal>WIN932</literal>, <literal>Windows932</literal></entry>
        </row>
        <row>
         <entry><literal>SHIFT_JIS_2004</literal></entry>
         <entry>Shift JIS, JIS X 0213</entry>
               <entry>Japonais</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SQL_ASCII</literal></entry>
         <entry>non spécifié (voir le texte)</entry>
         <entry><emphasis>tout</emphasis></entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>UHC</literal></entry>
         <entry>Code unifié Hangul</entry>
         <entry>Koréen</entry>
         <entry>Non</entry>
         <entry>1-2</entry>
         <entry><literal>WIN949</literal>, <literal>Windows949</literal></entry>
        </row>
        <row>
         <entry><literal>UTF8</literal></entry>
         <entry>Unicode, 8-bit</entry>
         <entry><emphasis>tous</emphasis></entry>
         <entry>Oui</entry>
         <entry>1-4</entry>
         <entry><literal>Unicode</literal></entry>
        </row>
        <row>
         <entry><literal>WIN866</literal></entry>
         <entry>Windows CP866</entry>
         <entry>Cyrillique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ALT</literal></entry>
        </row>
        <row>
         <entry><literal>WIN874</literal></entry>
         <entry>Windows CP874</entry>
         <entry>Thai</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1250</literal></entry>
         <entry>Windows CP1250</entry>
         <entry>Europe centrale</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1251</literal></entry>
         <entry>Windows CP1251</entry>
         <entry>Cyrillique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>WIN</literal></entry>
        </row>
        <row>
         <entry><literal>WIN1252</literal></entry>
         <entry>Windows CP1252</entry>
         <entry>Europe de l'ouest</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1253</literal></entry>
         <entry>Windows CP1253</entry>
         <entry>Grec</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1254</literal></entry>
         <entry>Windows CP1254</entry>
         <entry>Turque</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1255</literal></entry>
         <entry>Windows CP1255</entry>
         <entry>Hébreux</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1256</literal></entry>
         <entry>Windows CP1256</entry>
         <entry>Arabe</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1257</literal></entry>
         <entry>Windows CP1257</entry>
         <entry>Baltique</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1258</literal></entry>
         <entry>Windows CP1258</entry>
         <entry>Vietnamien</entry>
         <entry>Oui</entry>
         <entry>1</entry>
         <entry><literal>ABC</literal>, <literal>TCVN</literal>, <literal>TCVN5712</literal>, <literal>VSCII</literal></entry>
        </row>
       </tbody>
      </tgroup>
     </table>

     <para>
      Toutes les <acronym>API</acronym> clients ne supportent pas tous les jeux
      de caractères de
      la liste. Le pilote JDBC de <productname>PostgreSQL</productname>, par
      exemple, ne supporte pas <literal>MULE_INTERNAL</literal>,
      <literal>LATIN6</literal>, <literal>LATIN8</literal> et
      <literal>LATIN10</literal>.
     </para>

     <para>
      <literal>SQL_ASCII</literal> se comporte de façon considérablement
      différente des autres valeurs. Quand le jeu de caractères du
      serveur est <literal>SQL_ASCII</literal>, le serveur interprète les valeurs
      des octets 0-127 suivant le standard ASCII alors que les valeurs
      d'octets 128-255 sont considérées comme des caractères non interprétés.
      Aucune conversion de codage n'est effectuée avec
      <literal>SQL_ASCII</literal>. De ce fait, cette valeur ne déclare pas
      tant un encodage spécifique que l'ignorance de l'encodage. Dans la
      plupart des cas, si des données non ASCII doivent être traitées, il est
      déconseillé d'utiliser la valeur <literal>SQL_ASCII</literal> car
      <productname>PostgreSQL</productname> est alors
      incapable de convertir ou de valider les caractères non ASCII.
     </para>
    </sect2>

   <sect2>
    <title>Choisir le jeu de caractères</title>

    <para>
     <command>initdb</command> définit le jeu de caractères par défaut (encodage)
     pour un cluster. Par exemple,

<screen>initdb -E EUC_JP</screen>

     paramètre le jeu de caractères à
     <literal>EUC_JP</literal> (Extended Unix Code for Japanese). 
     L'option <option>--encoding</option> peut aussi être utilisée à la
     place de <option>-E</option> (options longues). Si aucune option
     <option>-E</option> ou <option>--encoding</option> n'est
     donnée, <command>initdb</command> tente de déterminer l'encodage approprié
     en fonction de la locale indiquée ou de celle par défaut.
    </para>

    <para>
     Vous pouvez indiquer un encodage autre que celui par défaut lors de la
     création de la base de données, à condition que l'encodage soit compatible
     avec la locale sélectionnée&nbsp;:

<screen>createdb -E EUC_KR -T template0 --lc-collate=ko_KR.euckr --lc-ctype=ko_KR.euckr korean</screen>

     Cela crée une base de données appelée <literal>korean</literal> qui
     utilise le jeu de caractères <literal>EUC_KR</literal>, et la locale
     <literal>ko_KR</literal>. Un autre moyen de réaliser cela est d'utiliser
     la commande SQL suivante&nbsp;:

<programlisting>CREATE DATABASE korean WITH ENCODING 'EUC_KR' LC_COLLATE='ko_KR.euckr' LC_CTYPE='ko_KR.euckr' TEMPLATE=template0;
</programlisting>

     Notez que les commandes ci-dessus précisent de copier la base de données
     <literal>template0</literal>. Lors de la copie d'une autre base, les
     paramètres d'encodage et de locale ne peuvent pas être modifiés de ceux de
     la base de données source car cela pourrait corrompre les données. Pour
     plus d'informations, voir <xref linkend="manage-ag-templatedbs"/>.
    </para>

    <para>
     L'encodage de la base de données est conservé dans le catalogue système
     <literal>pg_database</literal>.  Cela est visible à l'aide de 
     l'option <option>-l</option> ou de la commande <command>\l</command> de
     <command>psql</command>.

<screen>$ <userinput>psql -l</userinput>
                                         List of databases
   Name    |  Owner   | Encoding  |  Collation  |    Ctype    |          Access Privileges          
-----------+----------+-----------+-------------+-------------+-------------------------------------
 clocaledb | hlinnaka | SQL_ASCII | C           | C           | 
 englishdb | hlinnaka | UTF8      | en_GB.UTF8  | en_GB.UTF8  | 
 japanese  | hlinnaka | UTF8      | ja_JP.UTF8  | ja_JP.UTF8  | 
 korean    | hlinnaka | EUC_KR    | ko_KR.euckr | ko_KR.euckr | 
 postgres  | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | 
 template0 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
 template1 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
(7 rows)</screen>
    </para>

    <important>
     <para>
      Sur la plupart des systèmes d'exploitation modernes,
      <productname>PostgreSQL</productname> peut déterminer le jeu de
      caractères impliqué par la variable <envar>LC_CTYPE</envar>,
      et s'assure que l'encodage correspondant de la base de données est
      utilisé. Sur les systèmes plus anciens, il est de la responsabilité de
      l'utilisateur de s'assurer que l'encodage attendu par la locale est bien
      utilisé. Une erreur à ce niveau risque fort de conduire à un comportement
      étrange des opérations liées à la locale, tel le tri.
     </para>    

     <para>
      <productname>PostgreSQL</productname> autorise les superutilisateurs à créer des bases de données
      avec le jeu de caractère <literal>SQL_ASCII</literal> même lorsque la variable <envar>LC_CTYPE</envar>
      n'est pas à <literal>C</literal> ou <literal>POSIX</literal>.
      Comme indiqué plus haut,
      <literal>SQL_ASCII</literal> n'impose aucun encodage particulier aux
      données stockées en base, ce qui rend ce paramétrage vulnérable aux
      comportements erratiques lors d'opérations liées à la locale. 
      Cette combinaison de paramètres est dépréciée et pourrait un jour être
      interdite.
     </para>
    </important>
   </sect2>

   <sect2>
    <title>Conversion automatique d'encodage entre serveur et client</title>

    <para>
     <productname>PostgreSQL</productname> automatise la conversion
     de jeux de caractères entre client et serveur pour
     certaines combinaisons de jeux de caractères. Les informations de conversion sont
     conservées dans le catalogue système <literal>pg_conversion</literal>.
     <productname>PostgreSQL</productname> est livré avec certaines
     conversions prédéfinies, conversions listées dans le
     <xref linkend="multibyte-translation-table"/>. Une nouvelle
     conversion peut être créée en utilisant la commande SQL
     <command>CREATE CONVERSION</command>.
    </para>

     <table id="multibyte-translation-table">
      <title>Conversion de jeux de caractères client/serveur</title>
      <tgroup cols="2">
       <colspec colnum="1" colwidth="0.5*"/>
       <colspec colnum="2" colwidth="1.5*"/>
       <thead>
        <row>
         <entry>Jeu de caractères serveur</entry>
         <entry>Jeux de caractères client disponibles</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>BIG5</literal></entry>
         <entry><emphasis>non supporté comme encodage serveur</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_CN</literal></entry>
         <entry><emphasis>EUC_CN</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_JP</literal></entry>
         <entry><emphasis>EUC_JP</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>SJIS</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_KR</literal></entry>
         <entry><emphasis>EUC_KR</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_TW</literal></entry>
         <entry><emphasis>EUC_TW</emphasis>,
         <literal>BIG5</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>GB18030</literal></entry>
         <entry><emphasis>non supporté comme encodage serveur</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>GBK</literal></entry>
         <entry><emphasis>non supporté comme encodage serveur</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_5</literal></entry>
         <entry><emphasis>ISO_8859_5</emphasis>,
         <literal>KOI8R</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN866</literal>,
         <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_6</literal></entry>
         <entry><emphasis>ISO_8859_6</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_7</literal></entry>
         <entry><emphasis>ISO_8859_7</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_8</literal></entry>
         <entry><emphasis>ISO_8859_8</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>JOHAB</literal></entry>
         <entry><emphasis>JOHAB</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>KOI8R</literal></entry>
         <entry><emphasis>KOI8R</emphasis>,
         <literal>ISO_8859_5</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN866</literal>,
         <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>KOI8U</literal></entry>
         <entry><emphasis>KOI8U</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN1</literal></entry>
         <entry><emphasis>LATIN1</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN2</literal></entry>
         <entry><emphasis>LATIN2</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN1250</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN3</literal></entry>
         <entry><emphasis>LATIN3</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN4</literal></entry>
         <entry><emphasis>LATIN4</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN5</literal></entry>
         <entry><emphasis>LATIN5</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN6</literal></entry>
         <entry><emphasis>LATIN6</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN7</literal></entry>
         <entry><emphasis>LATIN7</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN8</literal></entry>
         <entry><emphasis>LATIN8</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN9</literal></entry>
         <entry><emphasis>LATIN9</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>LATIN10</literal></entry>
         <entry><emphasis>LATIN10</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>MULE_INTERNAL</literal></entry>
         <entry><emphasis>MULE_INTERNAL</emphasis>,
          <literal>BIG5</literal>,
          <literal>EUC_CN</literal>,
          <literal>EUC_JP</literal>,
          <literal>EUC_KR</literal>,
          <literal>EUC_TW</literal>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>LATIN1</literal> vers <literal>LATIN4</literal>,
          <literal>SJIS</literal>,
          <literal>WIN866</literal>,
          <literal>WIN1250</literal>,
          <literal>WIN1251</literal>
         </entry>
        </row>
        <row> 
         <entry><literal>SJIS</literal></entry>
         <entry><emphasis>non supporté comme encodage serveur</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>SQL_ASCII</literal></entry>
         <entry><emphasis>tous (aucune conversion n'est réalisée)</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>UHC</literal></entry>
         <entry><emphasis>non supporté comme encodage serveur</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>UTF8</literal></entry>
         <entry><emphasis>tout encodage supporté</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>WIN866</literal></entry>
         <entry><emphasis>WIN866</emphasis>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>,
          <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN874</literal></entry>
         <entry><emphasis>WIN874</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1250</literal></entry>
         <entry><emphasis>WIN1250</emphasis>,
          <literal>LATIN2</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1251</literal></entry>
         <entry><emphasis>WIN1251</emphasis>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>,
          <literal>WIN866</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1252</literal></entry>
         <entry><emphasis>WIN1252</emphasis>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1253</literal></entry>
         <entry><emphasis>WIN1253</emphasis>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1254</literal></entry>
         <entry><emphasis>WIN1254</emphasis>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1255</literal></entry>
         <entry><emphasis>WIN1255</emphasis>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1256</literal></entry>
         <entry><emphasis>WIN1256</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1257</literal></entry>
         <entry><emphasis>WIN1257</emphasis>,
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1258</literal></entry>
         <entry><emphasis>WIN1258</emphasis>,
         <literal>UTF8</literal>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>

    <para>
     Pour activer la conversion automatique des jeux de caractères, il
     est nécessaire d'indiquer à <productname>PostgreSQL</productname>
     le jeu de caractères (encodage) souhaité côté client. Il y a plusieurs
     façons de le faire&nbsp;:

     <itemizedlist>
      <listitem>
       <para>
        en utilisant la commande <command>\encoding</command> dans
        <application>psql</application>.
        <command>\encoding</command> permet de changer l'encodage
        client à la volée. Par exemple, pour changer le codage en
        <literal>SJIS</literal>, taper&nbsp;:

<programlisting>\encoding SJIS</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
        <application>la libpq</application> (<xref linkend="libpq-control"/>)
        a des fonctions de contrôle de l'encodage client&nbsp;;
       </para>
      </listitem>

      <listitem>
       <para>
        en utilisant <command>SET client_encoding TO</command>.

        L'encodage client peut être fixé avec la commande SQL suivante&nbsp;:

<programlisting>SET CLIENT_ENCODING TO '<replaceable>valeur</replaceable>';</programlisting>

        La syntaxe SQL plus standard <literal>SET NAMES</literal> peut
        également être utilisée pour cela&nbsp;:

<programlisting>SET NAMES '<replaceable>valeur</replaceable>';</programlisting>

        Pour connaître l'encodage client courant&nbsp;:

<programlisting>SHOW client_encoding;</programlisting>

        Pour revenir à l'encodage par défaut&nbsp;:

<programlisting>RESET client_encoding;</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
        en utilisant <envar>PGCLIENTENCODING</envar>.
        Si la variable d'environnement <envar>PGCLIENTENCODING</envar> est définie
        dans l'environnement client, l'encodage client est automatiquement 
        sélectionné lors de l'établissement d'une connexion au serveur (cette
        variable peut être surchargée à l'aide de toute autre méthode
        décrite ci-dessus)&nbsp;;
       </para>
      </listitem>

      <listitem>
      <para>
      en utilisant la variable de configuration
      <xref linkend="guc-client-encoding"/>.
      Si la variable <varname>client_encoding</varname> est définie,
      l'encodage client est automatiquement sélectionné lors de
      l'établissement d'une connexion au serveur (cette variable peut être
      surchargée à l'aide de toute autre méthode décrite ci-dessus).
       </para>
      </listitem>

     </itemizedlist>
    </para>

    <para>
     Si la conversion d'un caractère particulier n'est pas possible &mdash;
     dans le cas d'encodages <literal>EUC_JP</literal> pour le serveur 
     et <literal>LATIN1</literal> pour le client, et que certains caractères
     japonais renvoyés n'ont pas de représentation en <literal>LATIN1</literal>
     &mdash; une erreur est remontée.
    </para>

    <para>
     Si l'encodage client est défini en tant que
     <literal>SQL_ASCII</literal>, la conversion de l'encodage est désactivée quelque
     soit celui du serveur. Comme pour le serveur, 
     <literal>SQL_ASCII</literal> est déconseillé sauf à ne travailler qu'avec
     des données ASCII.
    </para>
   </sect2>

   <sect2>
    <title>Pour aller plus loin</title>

    <para>
     Il existe quelques sources intéressantes pour commencer à maîtriser les différents 
     jeux de caractères.

     <variablelist>
      <varlistentry>
       <term><ulink url="http://www.i18ngurus.com/docs/984813247.html"></ulink></term>

       <listitem>
        <para>
         Une collection complète de documents sur les jeux de caractères,
         les encodages et les pages code.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><citetitle>CJKV Information Processing: Chinese, Japanese, Korean &amp; Vietnamese Computing</citetitle></term>

       <listitem>
        <para>
         Contient des explications détaillées de <literal>EUC_JP</literal>,
         <literal>EUC_CN</literal>, <literal>EUC_KR</literal>,
         <literal>EUC_TW</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><ulink url="http://www.unicode.org/"></ulink></term>

       <listitem>
        <para>
         Le site web du Unicode Consortium.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>RFC 3629</term>

       <listitem>
        <para>
         <acronym>UTF</acronym>-8 (8-bit UCS/Unicode Transformation
         Format) est défini ici.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  </sect1>

</chapter>
