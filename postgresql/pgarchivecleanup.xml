<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/ref/pgarchivecleanup.sgml -->

<refentry id="pgarchivecleanup">
 <indexterm zone="pgarchivecleanup">
  <primary>pg_archivecleanup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_archivecleanup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_archivecleanup</refname>
  <refpurpose>nettoie les journaux de transactions archivés de <productname>PostgreSQL</productname></refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_archivecleanup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain"><replaceable>archivelocation</replaceable></arg>
   <arg choice="plain"><replaceable>oldestkeptwalfile</replaceable></arg>
   <para>
   </replaceable>archivelocation</replaceable>&nbsp;: répertoire d'archivage
   </replaceable>oldestkeptwalfile</replaceable>&nbsp;: dernier journal de transaction
   conservé
   </para>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

 <para>
  <application>pg_archivecleanup</application> est concu pour être
  utilisé en tant que commande pour le paramètre <literal>archive_cleanup_command</literal> de
  façon à nettoyer les fichiers WAL archivés lorsqu'une instance est en
  standby (voir <xref linkend="warm-standby"/>).
  <application>pg_archivecleanup</application> peut aussi être utilisé
  en tant que programme indépendant pour nettoyer les journaux de transactions
  archivés.
 </para>

  <para>
   Il faut insérer la ligne suivante dans le fichier <filename>
   recovery.conf</filename> pour qu'une instance utilise <application>
   pg_archivecleanup</application>&nbsp;:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>archivelocation</replaceable> %r'
</programlisting>
   où <replaceable>archivelocation</replaceable> est le répertoire
   dont les journaux de transactions archivés doivent être supprimés.
  </para>
  <para>
   Lorsque <literal>%r</literal> est utilisé dans <xref linkend=
   "archive-cleanup-command"/>, tous les journaux de transactions
   dont le nom précède cette valeur logique vont être supprimés.
   Cela permet de minimiser le nombre de fichiers conservés, tout en
   préservant la possibilité de redémarrer en cas de crash.
   L'utilisation de ce paramètre est tout à fait appropriée si
   <replaceable>archivelocation</replaceable> est un répertoire dédié
   à une seule instance en standby, mais ne l'est <emphasis>pas du
   tout</emphasis> si le répertoire <replaceable>archivelocation</replaceable>
   est sensé conserver les journaux de transactions sur le long terme, ou si
   plusieurs serveurs récupèrent les informations depuis le même
   répertoire d'archivage.
  </para>
  <para>
   Lorsqu'il est utilisé comme un programme indépendant, tous les
   journaux de transactions précédant (au sens logique) le <replaceable>
   oldestkeptwalfile</replaceable> vont être supprimés du répertoire
   d'archivage <replaceable>archivelocation</replaceable>.
   Dans ce mode, si vous spécifiez un nom de fichier en
   <filename>.partial</filename> ou <filename>.backup</filename>, alors le
   préfixe du fichier sera utilisé comme référence du
   <replaceable>oldestkeptwalfile</replaceable>
   En l'utilisant avec .backup, cela vous permet de supprimer sans
   risque d'erreur tous les fichiers WAL archivés d'une
   sauvegarde donnée.
   Par exemple, le cas suivant supprimera tous les fichiers antérieurs
   au nom logique du journal de transactions
   <filename>000000010000003700000010</filename>&nbsp;:

<programlisting>
pg_archivecleanup -d archive 000000010000003700000010.00000020.backup

pg_archivecleanup:  keep WAL file "archive/000000010000003700000010" and later
pg_archivecleanup:  removing file "archive/00000001000000370000000F"
pg_archivecleanup:  removing file "archive/00000001000000370000000E"
</programlisting>
  </para>

  <para>
   <application>pg_archivecleanup</application> considère que
   <replaceable>archivelocation</replaceable> est un répertoire
   accessible en lecture/écriture par l'utilisateur propriétaire de
   l'instance.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

   <para>
    <application>pg_archivecleanup</application> prend en charge les
    arguments suivants en ligne de commande&nbsp;:

    <variablelist>

     <varlistentry>
      <term><option>-d</option></term>
      <listitem>
       <para>
        Affiche de nombreuses informations de debuggage sur
        <filename>stderr</filename>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <para>
        Affiche le nom des fichiers qui auraient dû être supprimés sur
        <filename>stdout</filename> (Dry run).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</option></term>
      <term><option>--version</option></term>
      <listitem>
       <para>
        Affiche la version de <application>pg_archivecleanup</application>
        et quitte.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option> <replaceable>extension</replaceable></term>
      <listitem>
       <para>
        Dans le cas de l'utilisation du programmen de manière indépendante,
        il est possible de fournir une extension qui va vérifier tous
        les noms de fichier avant de décider lesquels doivent être
        supprimés.
        C'est particulièrement pratique lorsque les archives sont
        stockées compressées et ont été renommées avec une extension
        ajoutée par le progamme de compression.
        Par exemple : <literal>-x .gz</literal>.
       </para>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</option></term>
      <term><option>--help</option></term>
      <listitem>
       <para>
        Affiche des informations sur les arguments de la ligne de
        commande de <application>pg_archivecleanup</application> ,
        puis quitte.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <application>pg_archivecleanup</application> est concu pour
   fonctionner de manière indépendante à partir de la version 8.0 de
   <productname>PostgreSQL</productname> et pour fonctionner avec le
   paramètre archive_cleanup_command à partir de la version 9.0.
  </para>

  <para>
   <application>pg_archivecleanup</application> est écrit en C, le code
   source est facile à modifier, avec des sections spécifiques pour
   adapter le programme à vos propres besoins.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>Sur un système Unix ou Linux, vous devriez utiliser&nbsp;:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
</programlisting>
   On considère que le répertoire d'archivage est physiquement situé sur le
   serveur secondaire de manière à ce que <varname>archive_command</varname>
   puisse y accéder via NFS mais que les fichiers soit en
   local sur le serveur secondaire.
   Cela va&nbsp;:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     envoyer les informations de debug dans <filename>cleanup.log</filename>&nbsp;;
    </para>
   </listitem>
   <listitem>
    <para>
     supprimer les fichiers obsolètes du répertoire d'archivage.
    </para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="pgstandby"/></member>
  </simplelist>
 </refsect1>
</refentry>

