<?xml version="1.0" encoding="UTF-8"?>
<appendix id="contrib">
 <title>Modules supplémentaires fournis</title>

 <para>
  Cette annexe contient des informations concernant les modules disponibles
  dans le répertoire <literal>contrib</literal> de la distribution
  <productname>PostgreSQL</productname>. Ce sont des outils de portage,
  des outils d'analyse, des fonctionnalités supplémentaires qui ne font pas
  partie du système PostgreSQL de base, principalement parce qu'ils
  s'adressent à une audience limitée ou sont trop expérimentaux pour faire
  partie de la distribution de base. Cela ne concerne en rien leur utilité.
 </para>

 <para>
  Lors de la construction à partir des sources de la distribution, ces modules
  ne sont pas construits automatiquement, sauf si vous utilisez la cible
  « world » (voir <xref linkend="build"/>). Ils peuvent être construits et
  installés en exécutant&nbsp;:
<screen>
<userinput>gmake</userinput>
<userinput>gmake install</userinput>
</screen>
  dans le répertoire <literal>contrib</literal> d'un répertoire des sources
  configuré&nbsp;; ou pour ne construire et installer qu'un seul module
  sélectionné, on exécute ces commandes dans le sous-répertoire du module. Beaucoup
  de ces modules ont des tests de régression qui peuvent être exécutés
  en lançant la commande&nbsp;:
<screen>
<userinput>gmake installcheck</userinput>
</screen>
  une fois que le serveur <productname>PostgreSQL</productname> est démarré.
  (<literal>gmake check</literal> n'est pas
  supporté&nbsp;; un serveur de bases de données opérationnel est nécessaire
  pour réaliser ces tests, et le module doit avoir été construit et installé
  pour être testé.)
 </para>

 <para>
  Lorsqu'une version packagée de <productname>PostgreSQL</productname> est
  utilisée, ces modules sont typiquement
  disponibles dans un package séparé, comme par exemple
  <literal>postgresql-contrib</literal>.
 </para>

 <para>
  Beaucoup de ces modules fournissent de nouvelles fonctions, de nouveaux
  opérateurs ou types utilisateurs. Pour pouvoir utiliser un de ces
  modules, après avoir installé le code, il faut enregistrer les
  nouveaux objets SQL dans la base de données.
  In <productname>PostgreSQL</productname> 9.1 and later, this is done by executing
  a <xref linkend="sql-createextension"/> command.  In a fresh database,
  you can simply do&nbsp;:

<programlisting>
CREATE EXTENSION <replaceable>module_name</replaceable>;
</programlisting>
 </para>

 <para>
  This command must be run by a database superuser.  This registers the
  new SQL objects in the current database only, so you need to run this
  command in each database that you want
   the module's facilities to be available in.  Alternatively, run it in
  database <literal>template1</literal> so that the extension will be copied into
   subsequently-created databases by default.
  </para>
 
  <para>
  Many modules allow you to install their objects in a schema of your
  choice.  To do that, add <literal>SCHEMA
  <replaceable>schema_name</replaceable></literal> to the <command>CREATE EXTENSION</command>
  command.  By default, the objects will be placed in your current creation
  target schema, typically <literal>public</literal>.
  </para>
 
  <para>
  If your database was brought forward by dump and reload from a pre-9.1
  version of <productname>PostgreSQL</productname>, and you had been using the pre-9.1
  version of the module in it, you should instead do

<programlisting>
CREATE EXTENSION <replaceable>module_name</replaceable> FROM unpackaged;
</programlisting>

  This will update the pre-9.1 objects of the module into a proper
  <firstterm>extension</firstterm> object.  Future updates to the module will be
  managed by <xref linkend="sql-alterextension"/>.
  For more information about extension updates, see
  <xref linkend="extend-extensions"/>.
 </para>

 &adminpack;
 &auth-delay;
 &auto-explain;
 &btree-gin;
 &btree-gist;
 &chkpass;
 &citext;
 &cube;
 &dblink;
 &dict-int;
 &dict-xsyn;
 &dummy-seclabel;
 &earthdistance;
 &file-fdw;
 &fuzzystrmatch;
 &hstore;
 &intagg;
 &intarray;
 &isn;
 &lo;
 &ltree;
 &oid2name;
 &pageinspect;
 &passwordcheck;
 &pgarchivecleanup;
 &pgbench;
 &pgbuffercache;
 &pgcrypto;
 &pgfreespacemap;
 &pgrowlocks;
 &pgstandby;
 &pgstatstatements;
 &pgstattuple;
 &pgtestfsync;
 &pgtrgm;
 &pgupgrade;
 &seg;
 &sepgsql;
 &contrib-spi;
 &sslinfo;
 &tablefunc;
 &test-parser;
 &tsearch2;
 &unaccent;
 &uuid-ossp;
 &vacuumlo;
 &xml2;

</appendix>
