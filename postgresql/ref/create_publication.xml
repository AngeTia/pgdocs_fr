<?xml version="1.0" encoding="UTF-8"?>
<!--
doc/src/sgml/ref/create_publication.sgml
PostgreSQL documentation
-->

<refentry id="sql-createpublication">
 <indexterm zone="sql-createpublication">
  <primary>CREATE PUBLICATION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE PUBLICATION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Ordres du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE PUBLICATION</refname>
  <refpurpose>définir une nouvelle publication</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE PUBLICATION <replaceable class="parameter">nom</replaceable>
    [ FOR ALL TABLES
      | FOR <replaceable class="parameter">publication_object</replaceable> [, ... ] ]
    [ WITH ( <replaceable class="parameter">parametre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]

<phrase>where <replaceable class="parameter">publication_object</replaceable> is one of:</phrase>

    TABLE [ ONLY ] <replaceable class="parameter">table_name</replaceable> [ * ] [ ( <replaceable class="parameter">column_name</replaceable> [, ... ] ) ] [ WHERE ( <replaceable class="parameter">expression</replaceable> ) ] [, ... ]
    ALL TABLES IN SCHEMA { <replaceable class="parameter">schema_name</replaceable> | CURRENT_SCHEMA } [, ... ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE PUBLICATION</command> ajoute une nouvelle publication dans
   la base courante.  Le nom de la publication doit être différent du nom de
   toutes les autres publications existante au sein de la base courante.
  </para>

  <para>
   Une publication est essentiellement un groupe de table dont les changement
   de données sont destinés à être répliqué grâce à la réplication logique.
   Voir <xref linkend="logical-replication-publication"/> pour les détails de
   comment les publications participent à la mise en place de la réplication
   logique.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la nouvelle publication.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR TABLE</literal></term>
    <listitem>
     <para>
      Spécifie une liste de tables à ajouter à la publication.  Si
      <literal>ONLY</literal> est spécifié avant le nom de la table, seul
      cette table est ajoutée à la publication.  Si <literal>ONLY</literal>
      n'est pas spécifié, la table ainsi que toutes les tables descendantes
      (s'il y en a) est ajoutées.  De manière facultative,
      <literal>*</literal> peut être spécifié après le nom de la table pour
      indiquer explicitement que les tables descendantes doivent être
      incluses. Néanmoins, ceci ne s'applique pas à une table partitionnée.
      Les partitions d'une table sont toujours considérées implicitement comme
      faisant partie de la publication, donc elles ne sont jamais ajoutées
      explicitement à la publication.
     </para>

     <para>
      If the optional <literal>WHERE</literal> clause is specified, it defines a
      <firstterm>row filter</firstterm> expression. Rows for
      which the <replaceable class="parameter">expression</replaceable>
      evaluates to false or null will not be published. Note that parentheses
      are required around the expression. It has no effect on
      <literal>TRUNCATE</literal> commands.
     </para>

     <para>
      When a column list is specified, only the named columns are replicated.
      If no column list is specified, all columns of the table are replicated
      through this publication, including any columns added later.  If a column
      list is specified, it must include the replica identity columns.
     </para>

     <para>
      Seules les tables persistentes et les tables partitionnées peuvent faire
      partie d'une publication. Les tables temporaires, tables non
      journalisées, tables distantes, vues matérialisées et vues standard ne
      peuvent pas faire partie d'une publication. Pour répliquer une table
      partitionnée, il faut ajouter chaque partition individuellement à la
      publication.
     </para>

     <para>
      Quand une table partitionnée est ajoutée à une publication, toutes les
      partitions existantes et futures seront considérées implicitement comme
      faisant partie de la publication. Donc, même les opérations réalisées
      directement sur une partition seront publiées via les publications dont
      fait partie la table partitionnée.
     </para>

     <para>
      Specifying a table that is part of a schema specified by
      <literal>FOR ALL TABLES IN SCHEMA</literal> is not supported.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR ALL TABLES</literal></term>
    <listitem>
     <para>
      Marque la publication comme publication qui réplique les changement pour
      toutes les tables de la base, en incluant les tables qui seront crées
      dans le futur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR ALL TABLES IN SCHEMA</literal></term>
    <listitem>
     <para>
      Marks the publication as one that replicates changes for all tables in
      the specified list of schemas, including tables created in the future.
     </para>

     <para>
      Specifying a schema along with a table which belongs to the specified
      schema using <literal>FOR TABLE</literal> is not supported.
     </para>

     <para>
      Only persistent base tables and partitioned tables present in the schema
      will be included as part of the publication.  Temporary tables, unlogged
      tables, foreign tables, materialized views, and regular views from the
      schema will not be part of the publication.
     </para>

     <para>
      When a partitioned table is published via schema level publication, all
      of its existing and future partitions are implicitly considered to be part of the
      publication, regardless of whether they are from the publication schema or not.
      So, even operations that are performed directly on a
      partition are also published via publications that its ancestors are
      part of.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="parameter">parametre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause spécifique les paramètres facultatifs d'une publication.
      Les paramètres suivants sont supportés :

      <variablelist>
       <varlistentry>
        <term><literal>publish</literal> (<type>string</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine quelles opération DML seront publiées par la
          nouvelle publication aux souscripteurs.  Le contenu est une liste
          d'opération séparé par des virgules.  Les opérations autorisées sont
          <literal>insert</literal>, <literal>update</literal>,
          <literal>delete</literal> et <literal>truncate</literal>.  Par
          défaut toutes les actions sont publiées, et donc la valeur par
          défaut pour cette option est <literal>'insert, update,
           delete, truncate'</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>publish_via_partition_root</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine si les modifications dans une table
          partitionnée (ou dans ses partitions) contenue dans la publication
          seront publiées en utilisant l'identité et le schéma de la table
          partitionnée plutôt que celle des partitions individuelles
          réellement modifiées&nbsp;; ce dernier est le comportement par
          défaut. Activer ce paramètre permet à des changements d'être
          répliqués dans une table non partitionnée ou dans une table
          partitionnée différemment.
         </para>

         <para>
          This parameter also affects how row filters and column lists are
          chosen for partitions; see below for details.
         </para>

         <para>
          Si ceci est activé, les opérations <literal>TRUNCATE</literal>
          réalisées directement sur les partitions ne sont pas répliquées.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>

     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   If <literal>FOR TABLE</literal>, <literal>FOR ALL TABLES</literal> or
   <literal>FOR ALL TABLES IN SCHEMA</literal> are not specified, then the
   publication starts out with an empty set of tables.  That is useful if
   tables or schemas are to be added later.
  </para>

  <para>
   La création d'une publication ne démarre pas la réplication.  Cela définit
   uniquement un regroupement ainsi qu'un filtre logique pour les futurs
   souscripteurs.
  </para>

  <para>
   Pour créer une publication, l'utilisateur lançant la commande doit avec le
   privilège <literal>CREATE</literal> pour la base de données courante.
   (Bien entendu, les super-utilisateurs coutournent cette vérification.)
  </para>

  <para>
   Pour ajouter une table à une publication, l'utilisateur lançant la commande
   doit avoir les droits de propriétaire de la table. Les clauses <command>FOR
   ALL TABLES</command> et <command>FOR ALL TABLES IN SCHEMA</command>
   nécessitent d'être super-utilisateur pour pouvoir les utiliser.
  </para>

  <para>
   Les tables ajoutées à une publication qui publie les opérations
   <command>UPDATE</command> et/ou <command>DELETE</command> doivent avoir
   <literal>REPLICA IDENTITY</literal> défini.  Autrement ces opérations seront
   interdites sur ces tables.
  </para>

  <para>
   A row filter expression (i.e., the <literal>WHERE</literal> clause) must contain only
   columns that are covered by the <literal>REPLICA IDENTITY</literal>, in
   order for <command>UPDATE</command> and <command>DELETE</command> operations
   to be published. For publication of <command>INSERT</command> operations,
   any column may be used in the <literal>WHERE</literal> expression. The
   row filter allows simple expressions that don't have
   user-defined functions, user-defined operators, user-defined types,
   user-defined collations, non-immutable built-in functions, or references to
   system columns.
  </para>

  <para>
   For published partitioned tables, the row filter for each
   partition is taken from the published partitioned table if the
   publication parameter <literal>publish_via_partition_root</literal> is true,
   or from the partition itself if it is false (the default).
   See <xref linkend="logical-replication-row-filter"/> for details about row
   filters.
   Similarly, for published partitioned tables, the column list for each
   partition is taken from the published partitioned table if the
   publication parameter <literal>publish_via_partition_root</literal> is true,
   or from the partition itself if it is false.
  </para>

  <para>
   Pour une commande <command>INSERT ... ON CONFLICT</command>, la publication
   publiera l'opération qui résulte réellement de la commande.  Ainsi, en
   fonction du résultat, cela pourrait être publiée comme un
   <command>INSERT</command> ou un <command>UPDATE</command>, ou cela pourrait
   ne pas être publié du tout.
  </para>

  <para>
   <command>ATTACH</command>-er une table dans un arbre de partition dont la
   racine est publiée en utilisant une publication ayant
   <literal>publish_via_partition_root</literal> configuré to
   <literal>true</literal> ne résulte pas en la réplication du contenu existant
   de la table.
  </para>

  <para>
   Les commandes <command>COPY ... FROM</command> sont publiées comme des
   opérations <command>INSERT</command>.
  </para>

  <para>
   Les opérations <acronym>DDL</acronym> ne sont pas publiées.
  </para>

  <para>
   The <literal>WHERE</literal> clause expression is executed with the role used
   for the replication connection.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une publication qui publie tous les changements sur deux tables :
   <programlisting>
CREATE PUBLICATION mypublication FOR TABLE users, departments;
   </programlisting>
  </para>

  <para>
   Create a publication that publishes all changes from active departments:
<programlisting>
CREATE PUBLICATION active_departments FOR TABLE departments WHERE (active IS TRUE);
</programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changements sur toutes les tables :
   <programlisting>
CREATE PUBLICATION alltables FOR ALL TABLES;
   </programlisting>
  </para>

  <para>
   Créer une publication qui ne publie que les opérations
   d'<command>INSERT</command> sur une table :
   <programlisting>
CREATE PUBLICATION insert_only FOR TABLE mydata
    WITH (publish = 'insert');
</programlisting>
  </para>

  <para>
   Create a publication that publishes all changes for tables
   <structname>users</structname>, <structname>departments</structname> and
   all changes for all the tables present in the schema
   <structname>production</structname>:
<programlisting>
CREATE PUBLICATION production_publication FOR TABLE users, departments, ALL TABLES IN SCHEMA production;
</programlisting>
  </para>

  <para>
   Create a publication that publishes all changes for all the tables present in
   the schemas <structname>marketing</structname> and
   <structname>sales</structname>:
<programlisting>
CREATE PUBLICATION sales_publication FOR ALL TABLES IN SCHEMA marketing, sales;
</programlisting></para>

  <para>
   Create a publication that publishes all changes for table <structname>users</structname>,
   but replicates only columns <structname>user_id</structname> and
   <structname>firstname</structname>:
<programlisting>
CREATE PUBLICATION users_filtered FOR TABLE users (user_id, firstname);
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE PUBLICATION</command> est une extension
   <productname>PostgreSQL</productname> au langage SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterpublication"/></member>
   <member><xref linkend="sql-droppublication"/></member>
   <member><xref linkend="sql-createsubscription"/></member>
   <member><xref linkend="sql-altersubscription"/></member>
  </simplelist>
 </refsect1>
</refentry>
