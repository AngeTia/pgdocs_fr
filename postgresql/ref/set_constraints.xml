<?xml version="1.0" encoding="ISO-8859-15"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<refentry id="sql-set-constraints">
 <refmeta>
  <refentrytitle id="sql-set-constraints-title">SET CONSTRAINTS</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET CONSTRAINTS</refname>
  <refpurpose>initialise le moment de vérification de contrainte de la transaction en
   cours</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>SET CONSTRAINTS { ALL | <replaceable class="parameter">nom</replaceable> [, ...] } { DEFERRED | IMMEDIATE }
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-set-constraints">
   <primary>SET CONSTRAINTS</primary>
  </indexterm>


  <para>
   <command>SET CONSTRAINTS</command> initialise le comportement de la
   vérification des contraintes dans la transaction en cours.
   Les contraintes <literal>IMMEDIATE</literal> sont vérifiées à la fin de
   chaque instruction. Les contraintes <literal>DEFERRED</literal> ne sont
   vérifiées qu'à la validation de la transaction. Chaque contrainte a son
   propre mode <literal>IMMEDIATE</literal> ou <literal>DEFERRED</literal>.
  </para>

  <para>
   À la création, une contrainte se voit donnée une des trois
   caractéristiques&nbsp;: <literal>DEFERRABLE INITIALLY DEFERRED</literal>,
   <literal>DEFERRABLE INITIALLY IMMEDIATE</literal> ou
   <literal>NOT DEFERRABLE</literal>. La troisième forme est toujours
   <literal>IMMEDIATE</literal> et n'est pas affectée par la commande
   <command>SET CONSTRAINTS</command>. Les deux premières classes commencent
   chaque transaction dans le mode indiqué mais leur comportement peut changer à
   l'intérieur d'une transaction par <command>SET CONSTRAINTS</command>.
  </para>

  <para>
   <command>SET CONSTRAINTS</command> avec une liste de noms de contraintes
   modifie le mode de ces contraintes (qui doivent toutes être différables).
   Chaque nom de contrainte peut être qualifié d'un schéma.
   Le chemin de recherche des schémas est utilisé pour trouver le premier
   nom correspondant si aucun nom de schéma n'a été indiqué.
   <command>SET CONSTRAINTS ALL</command> modifie le mode de toutes les
   contraintes déférables.
  </para>

  <para>
   Lorsque <command>SET CONSTRAINTS</command> modifie le mode d'une contrainte
   de <literal>DEFERRED</literal> à <literal>IMMEDIATE</literal>, le nouveau
   mode prend effet rétroactivement&nbsp;: toute modification de données qui
   aurait été vérifiée à la fin de la transaction est en fait vérifiée lors de
   l'exécution de la commande <command>SET CONSTRAINTS</command>. Si une
   contrainte est violée, la commande <command>SET CONSTRAINTS</command> échoue
   (et ne change pas le mode de contrainte). Du coup, <command>SET
   CONSTRAINTS</command> peut être utilisée pour forcer la vérification de
   contraintes à un point spécifique d'une transaction.
  </para>

  <para>
   Actuellement, seules les contraintes <literal>UNIQUE</literal>,
   <literal>PRIMARY KEY</literal>, <literal>REFERENCES</literal> (clé
   étrangère) et <literal>EXCLUDE</literal> sont affectées par ce paramètre.
   Les contraintes <literal>NOT NULL</literal> et <literal>CHECK</literal>
   sont toujours vérifiées immédiatement quand une ligne est insérée ou
   modifiée (<emphasis>pas</emphasis> à la fin de l'instruction). Les
   contraintes uniques et d'exclusion qui n'ont pas été déclarées
   <literal>DEFERRABLE</literal> sont aussi vérifiées immédiatement.
  </para>

  <para>
   Le déclenchement des triggers qui sont déclarés comme des <quote>triggers
   de contraintes</quote> est aussi contrôlé par ce paramètre &mdash; ils se
   déclenchent au même moment que la contrainte associée devait être vérifiée.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Comme <productname>PostgreSQL</productname> ne nécessite pas les noms de
   contraintes d'être uniques à l'intérieur d'un schéma (mais seulement par
   tables), il est possible qu'il y ait plus d'une correspondance pour un
   nom de contrainte spécifié. Dans ce cas, <command>SET CONSTRAINTS</command>
   agira sur toutes les correspondances. Pour un nom sans qualification de
   schéma, une fois qu'une ou plusieurs correspondances ont été trouvées dans
   les schémas du chemin de recherche, les autres schémas du chemin ne sont pas
   testés.
  </para>

  <para>
   Cette commande altère seulement le comportement des contraintes à l'intérieur
   de la transaction en cours. Du coup, si vous exécutez cette commande en
   dehors d'un bloc de transaction (pair
   <command>BEGIN</command>/<command>COMMIT</command>), elle ne semble pas avoir
   d'effet.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Cette commande est compatible avec le comportement défini par le standard
   SQL en dehors du fait que, dans <productname>PostgreSQL</productname>, il
   ne s'applique pas aux contraintes <literal>NOT NULL</literal> et
   <literal>CHECK</literal>. De plus, <productname>PostgreSQL</productname>
   vérifie les contraintes uniques non déferrables immédiatement, pas à la
   fin de l'instruction comme le standard le suggère.
  </para>
 </refsect1>
</refentry>
