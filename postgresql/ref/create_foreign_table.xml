<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createforeigntable">
 <indexterm zone="sql-createforeigntable">
  <primary>CREATE FOREIGN TABLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions de langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE FOREIGN TABLE</refname>
  <refpurpose>crée une nouvelle table distante</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE FOREIGN TABLE [ IF NOT EXISTS ] <replaceable class="parameter">table_name</replaceable> ( [
  { <replaceable class="PARAMETER">nom_colonne</replaceable> <replaceable class="PARAMETER">type_donnee</replaceable> [ OPTIONS ( <replaceable class="PARAMETER">option</replaceable> '<replaceable class="PARAMETER">valeur</replaceable>' [, ... ] ) ] [ COLLATE <replaceable>collation</replaceable> ] [ <replaceable class="PARAMETER">contrainte_colonne</replaceable> [ ... ] ]
    | <replaceable>contrainte_table</replaceable> }
    [, ... ]
] )
  SERVER <replaceable class="parameter">nom_serveur</replaceable>
[ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ]

<phrase>where <replaceable class="parameter">contrainte_colonne</replaceable> is:</phrase>

[ CONSTRAINT <replaceable class="parameter">nom_contrainte</replaceable> ]
{ NOT NULL |
  NULL |
  CHECK ( <replaceable class="PARAMETER">expression</replaceable> ) [ NO INHERIT ] |
  DEFAULT <replaceable>expr_defaut</replaceable> }

<phrase>et <replaceable class="PARAMETER">contrainte_table</replaceable> vaut&nbsp;:</phrase>

[ CONSTRAINT <replaceable class="PARAMETER">nom_contrainte</replaceable> ]
CHECK ( <replaceable class="PARAMETER">expression</replaceable> ) [ NO INHERIT ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-createforeigntable-description">
  <title>Description</title>

  <para>
   La commande <command>CREATE FOREIGN TABLE</command> crée une nouvelle table distante
   dans la base de données courante. La table distante appartient à l'utilisateur qui
   exécute cette commande.
  </para>

  <para>
   Si un nom de schema est spécifié (par exemple, <literal>CREATE FOREIGN TABLE
    monschema.matable ...</literal>), alors la table sera créée dans le schéma
   spécifié. Dans les autres cas, elle sera créée dans le schéma courant.
   Le nom de la table distante doit être différent du nom des autres tables distantes,
   tables, séquences, index, vues ou vues matérialisées du même schéma.
  </para>

  <para>
   La commande <command>CREATE FOREIGN TABLE</command> crée aussi automatiquement
   un type de donnée qui représente le type composite correspondant à une ligne
   de la table distante. En conséquence, une table distante ne peut pas avoir
   le même nom qu'un type de donnée existant dans le même schéma.
  </para>

  <para>
   Pour pouvoir créer une table distante, vous devez avoir le droit
   <literal>USAGE</literal> sur le serveur distant, ainsi que le droit
   privilege on the foreign server, as well as <literal>USAGE</literal>
   sur tous les types de colonne utilisés dans la table.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>

   <varlistentry>
    <term><literal>IF NOT EXISTS</literal></term>
    <listitem>
     <para>
      Permet de ne pas retourner d'erreur si une table distante de même nom existe déjà.
      Une simple notice est alors rapportée. À noter que la table distante existante
      n'a potentiellement aucun lien avec la table distante qui aurait pu être créée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_table</replaceable></term>
    <listitem>
     <para>
      Le nom de la table distante à créer.
      Il est aussi possible de spécifier le schéma qui contient cette table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_colonne</replaceable></term>
    <listitem>
     <para>
      Le nom de la colonne à créer dans cette nouvelle table distante.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_donnee</replaceable></term>
    <listitem>
     <para>
      le type de donnée de la colonne. cela peut inclure des spécificateurs
      de tableaux.
      pour plus d'information sur les types de données supportés par
      <productname>postgresql</productname>, se référer à <xref
      linkend="datatype"/>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>COLLATE <replaceable>collation</replaceable></literal></term>
    <listitem>
     <para>
      The <literal>COLLATE</literal> clause assigns a collation to
      the column (which must be of a collatable data type).
      If not specified, the column data type's default collation is used.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERITS ( <replaceable>parent_table</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      The optional <literal>INHERITS</literal> clause specifies a list of
      tables from which the new foreign table automatically inherits
      all columns.  Parent tables can be plain tables or foreign tables.
      See the similar form of
      <xref linkend="sql-createtable"/> for more details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CONSTRAINT <replaceable class="PARAMETER">constraint_name</replaceable></literal></term>
    <listitem>
     <para>
      An optional name for a column or table constraint.  If the
      constraint is violated, the constraint name is present in error messages,
      so constraint names like <literal>col must be positive</literal> can be used
      to communicate helpful constraint information to client applications.
      (Double-quotes are needed to specify constraint names that contain spaces.)
      If a constraint name is not specified, the system generates a name.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NOT NULL</literal></term>
    <listitem>
     <para>
      interdiction des valeurs null dans la colonne.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NULL</literal></term>
    <listitem>
     <para>
      les valeurs null sont autorisées pour la colonne. il s'agit du comportement par défaut.
     </para>

     <para>
      cette clause n'est fournie que pour des raisons de compatibilité avec les bases de données
      sql non standard. son utilisation n'est pas encouragée dans les nouvelles applications.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CHECK ( <replaceable class="PARAMETER">expression</replaceable> ) [ NO INHERIT ] </literal></term>
    <listitem>
     <para>
      The <literal>CHECK</literal> clause specifies an expression producing a
      Boolean result which each row in the foreign table is expected
      to satisfy; that is, the expression should produce TRUE or UNKNOWN,
      never FALSE, for all rows in the foreign table.
      A check constraint specified as a column constraint should
      reference that column's value only, while an expression
      appearing in a table constraint can reference multiple columns.
     </para>

     <para>
      Currently, <literal>CHECK</literal> expressions cannot contain
      subqueries nor refer to variables other than columns of the
      current row.  The system column <literal>tableoid</literal>
      may be referenced, but not any other system column.
     </para>

     <para>
      A constraint marked with <literal>NO INHERIT</literal> will not propagate to
      child tables.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT
      <replaceable>expr_defaut</replaceable></literal></term>
    <listitem>
     <para>
      la clause <literal>default</literal> affecte une valeur par défaut pour
      la colonne dont il est l'objet. la valeur est toute expression sans
      variable (les sous-requêtes et les références croisées à d'autres colonnes
      de la même table ne sont pas autorisées). le type de données de l'expression
      doit correspondre au type de données de la colonne.
     </para>

     <para>
      l'expression par défaut sera utilisée dans toute opération d'insertion
      qui n'indique pas de valeur pour la colonne. s'il n'y a pas de valeur par
      défaut pour une colonne, la valeur par défaut implicite est null.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="pARAMETER">nom_serveur</replaceable></term>
    <listitem>
     <para>
      Le nom d'un serveur distant existant à utiliser pour la table distante.
      Pour les détails sur la définition d'un serveur, voir <xref
      linkend="sql-createserver"/>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ...] )</literal></term>
    <listitem>
     <para>
      Options qui peuvent être associés à la nouvelle table distante ou à une de ses colonnes.
      Les noms des options autorisées et leurs valeurs sont spécifiques
      à chaque wrapper de données distantes et sont validées en utilisant
      la fonction de validation du wrapper de données distantes. L'utilisation répétée de la même option
      n'est pas autorisée (bien qu'il soit possible qu'une option de table et de colonne ait le même nom).
     </para>
    </listitem>
   </varlistentry>

  </variablelist>

 </refsect1>

 <refsect1>
  <title>Notes</title>

   <para>
    Constraints on foreign tables (such as <literal>CHECK</literal>
    or <literal>NOT NULL</literal> clauses) are not enforced by the
    core <productname>PostgreSQL</productname> system, and most foreign data wrappers
    do not attempt to enforce them either; that is, the constraint is
    simply assumed to hold true.  There would be little point in such
    enforcement since it would only apply to rows inserted or updated via
    the foreign table, and not to rows modified by other means, such as
    directly on the remote server.  Instead, a constraint attached to a
    foreign table should represent a constraint that is being enforced by
    the remote server.
   </para>

   <para>
    Some special-purpose foreign data wrappers might be the only access
    mechanism for the data they access, and in that case it might be
    appropriate for the foreign data wrapper itself to perform constraint
    enforcement.  But you should not assume that a wrapper does that
    unless its documentation says so.
   </para>

   <para>
    Although <productname>PostgreSQL</productname> does not attempt to enforce
    constraints on foreign tables, it does assume that they are correct
    for purposes of query optimization.  If there are rows visible in the
    foreign table that do not satisfy a declared constraint, queries on
    the table might produce incorrect answers.  It is the user's
    responsibility to ensure that the constraint definition matches
    reality.
   </para>
 </refsect1>
 
 <refsect1 id="sql-createforeigntable-examples">
  <title>Exemples</title>

  <para>
   Créer une table distante <structname>films</structname> qui sera parcourue
   via le serveur <structname>serveur_film</structname> :

   <programlisting>
CREATE FOREIGN TABLE films (
    code        char(5) NOT NULL,
    title       varchar(40) NOT NULL,
    did         integer NOT NULL,
    date_prod   date,
    kind        varchar(10),
    len         interval hour to minute
)
SERVER serveur_films;
   </programlisting>
  </para>

 </refsect1>

 <refsect1 id="sql-createforeigntable-compatibility">
  <title id="sql-createforeigntable-compatibility-title">Compatibilité</title>

  <para>
   La commande <command>CREATE FOREIGN TABLE</command> est conforme au standard
   <acronym>SQL</acronym>. Toutefois, tout comme la commande
   <link linkend="sql-createtable"><command>CREATE TABLE</command></link>,
   l'usage de la contrainte <literal>NULL</literal> et des tables distantes
   sans colonnes sont autorisés.
   The ability to specify column default values is also
   a <productname>PostgreSQL</productname> extension.  Table inheritance, in the form
   defined by <productname>PostgreSQL</productname>, is nonstandard.
  </para>

 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterforeigntable"/></member>
   <member><xref linkend="sql-dropforeigntable"/></member>
   <member><xref linkend="sql-createtable"/></member>
   <member><xref linkend="sql-createserver"/></member>
   <member><xref linkend="sql-importforeignschema"/></member>
  </simplelist>
 </refsect1>
</refentry>
