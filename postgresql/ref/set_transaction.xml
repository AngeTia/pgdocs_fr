<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060308 pour la relecture -->

<refentry id="sql-set-transaction">
 <refmeta>
  <refentrytitle>SET TRANSACTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET TRANSACTION</refname>
  <refpurpose>initialise les caractéristiques de la transaction
   actuelle</refpurpose>
 </refnamediv>

 <indexterm>
  <primary>niveau d'isolation de la transaction</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <indexterm>
  <primary>transaction en lecture seule</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <indexterm>
  <primary>transaction différable</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>SET TRANSACTION <replaceable class="parameter">mode_transaction</replaceable> [, ...]
SET SESSION CHARACTERISTICS AS TRANSACTION <replaceable class="parameter">mode_transaction</replaceable> [, ...]

<phrase>où <replaceable class="parameter">mode_transaction</replaceable> fait
partie de&nbsp;:</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-set-transaction">
   <primary>SET TRANSACTION</primary>
  </indexterm>

  <para>
   La commande <command>SET TRANSACTION</command> initialise les
   caractéristiques de la transaction courante. Elle est sans effet sur les
   transactions suivantes. <command>SET SESSION CHARACTERISTICS</command>
   positionne les caractéristiques par défaut pour toutes les
   transactions à venir d'une session. Ces valeurs peuvent ensuite être surchargées
   par <command>SET TRANSACTION</command> pour une transaction particulière.
  </para>

  <para>
   Les caractéristiques de transaction disponibles sont le niveau
   d'isolation, le mode d'accès de la transaction
   (lecture/écriture ou lecture seule) et le mode différable.
  </para>

  <para>
   Le niveau d'isolation détermine les données que la
   transaction peut voir quand d'autres transactions fonctionnent
   concurrentiellement&nbsp;:

   <variablelist>
    <varlistentry>
     <term><literal>READ COMMITTED</literal></term>
     <listitem>
      <para>
       Une instruction ne peut voir que les lignes validées avant qu'elle ne
       commence. C'est la valeur par défaut.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>REPEATABLE READ</literal></term>
     <listitem>
      <para>
       Toute instruction de la transaction en cours ne peut voir
       que les lignes validées avant que la première requête ou 
       instruction de modification de données soit exécutée dans cette
       transaction.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>SERIALIZABLE</literal></term>
     <listitem>
      <para>
       Toutes les requêtes de la transaction en cours peuvent seulement voir
       les lignes validées avant l'exécution de la première requête ou 
       instruction de modification de données de cette transaction. Si un
       ensemble de lectures et écritures parmi les transactions sérialisables
       concurrentes créait une situation impossible à obtenir avec une
       exécution en série (une à la fois) de ces transactions, l'une d'entre
       elles sera annulée avec un état <literal>SQLSTATE</literal> à
       <literal>serialization_failure</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   Le standard SQL définit un niveau supplémentaire, <literal>READ
   UNCOMMITTED</literal>.
   Dans <productname>PostgreSQL</productname>, <literal>READ
   UNCOMMITTED</literal> est traité comme
   <literal>READ COMMITTED</literal>.
  </para>

  <para>
   Le niveau d'isolation de la transaction ne peut plus être modifié après 
   l'exécution de la première requête ou instruction de modification de données
   (<command>SELECT</command>, <command>INSERT</command>,
   <command>DELETE</command>, <command>UPDATE</command>,
   <command>FETCH</command> ou <command>COPY</command>) d'une transaction.
   Voir <xref linkend="mvcc"/> pour plus d'informations sur
   l'isolation et le contrôle de concurrence.
  </para>

  <para>
   La méthode d'accès de la transaction détermine si elle est en
   lecture/écriture ou en lecture seule. Lecture/écriture est la valeur par
   défaut. Quand une transaction est en lecture seule, les commandes SQL
   suivantes sont interdites&nbsp;: <literal>INSERT</literal>,
   <literal>UPDATE</literal>, <literal>DELETE</literal> et <literal>COPY
   FROM</literal> si la table modifiée n'est pas temporaire&nbsp;;
   toutes les commandes <literal>CREATE</literal>,
   <literal>ALTER</literal> et <literal>DROP</literal>&nbsp;;
   <literal>COMMENT</literal>, <literal>GRANT</literal>,
   <literal>REVOKE</literal>, <literal>TRUNCATE</literal>&nbsp;;
   <literal>EXPLAIN ANALYZE</literal> et <literal>EXECUTE</literal> si la
   commande exécutée figure parmi celles listées plus haut. C'est une notion
   de haut niveau de lecture seule qui n'interdit pas toutes les écritures sur
   disque.
  </para>

  <para>
   La propriété <literal>DEFERRABLE</literal> d'une transaction n'a pas
   d'effet tant que la transaction est aussi <literal>SERIALIZABLE</literal>
   et <literal>READ ONLY</literal>. Quand toutes ces propriétés sont
   configurées pour une transaction, la transaction pourrait bloquer lors de
   la première acquisition de son image de la base, après quoi il est possible
   de fonctionner sans la surcharge normale d'une transaction
   <literal>SERIALIZABLE</literal> et sans risque de contribuer ou d'être
   annulé par un échec de sérialisation. Ce mode convient bien à l'exécution
   de longs rapports ou à la création de sauvegardes.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si <command>SET TRANSACTION</command> est exécuté sans
   <command>START TRANSACTION</command> ou <command>BEGIN</command> préalable,
   il est sans effet car la transaction se termine immédiatement.
  </para>

  <para>
   Il est possible de se dispenser de <command>SET TRANSACTION</command> en
   spécifiant le <replaceable class="parameter">mode_transaction</replaceable>
   désiré dans <command>BEGIN</command> ou <command>START TRANSACTION</command>.
  </para>

  <para>
   Les modes de transaction par défaut d'une session peuvent aussi être
   configurés en initialisant les paramètres de configuration <xref
   linkend="guc-default-transaction-isolation"/>, <xref
   linkend="guc-default-transaction-read-only"/> et
   <xref linkend="guc-default-transaction-deferrable"/>. (En fait, <command>SET SESSION
   CHARACTERISTICS</command> est un équivalent verbeux de la configuration de
   ces variables avec <command>SET</command>.) Les valeurs par défaut
   peuvent ainsi être initialisées dans le fichier de configuration, via
   <command>ALTER DATABASE</command>, etc. <xref linkend="runtime-config"/>
   fournit de plus amples informations.
  </para>
 </refsect1>

 <refsect1 id="r1-sql-set-transaction-3">
  <title>Compatibilité</title>

  <para>
   Les deux commandes sont définies dans le standard <acronym>SQL</acronym>.
   <literal>SERIALIZABLE</literal> y est le niveau d'isolation par défaut de la
   transaction. Dans
   <productname>PostgreSQL</productname>, la valeur par défaut est
   habituellement <literal>READ COMMITTED</literal>, mais elle peut être
   modifiée comme cela est mentionné ci-dessus.
  </para>

  <para>
   Dans le standard SQL, il existe une autre caractéristique de transaction
   pouvant être configurée avec ces commandes&nbsp;: la taille de l'aire de
   diagnostique. Ce concept n'est valable que pour le SQL embarqué et, de
   fait, n'est pas implanté dans le serveur
   <productname>PostgreSQL</productname>.
  </para>

  <para>
   L'option <literal>DEFERRABLE</literal> de
   <replaceable class="parameter">transaction_mode</replaceable>
   est une extension de <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL requiert des virgules entre chaque <replaceable
   class="parameter">mode_transaction</replaceable> mais, pour des raisons
   historiques, <productname>PostgreSQL</productname> autorise l'omission des
   virgules.
  </para>
 </refsect1>
</refentry>
