<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-altercollation">
 <indexterm zone="sql-altercollation">
  <primary>ALTER COLLATION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER COLLATION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Commandes du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER COLLATION</refname>
  <refpurpose>modifie la définition d'une collation</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
ALTER COLLATION <replaceable>name</replaceable> REFRESH VERSION

ALTER COLLATION <replaceable>nom</replaceable> RENAME TO <replaceable>nouveau_nom</replaceable>
ALTER COLLATION <replaceable>nom</replaceable> OWNER TO { <replaceable>nouveau_propriétaire</replaceable> | CURRENT_USER | SESSION_USER }
ALTER COLLATION <replaceable>nom</replaceable> SET SCHEMA <replaceable>nouveau_schéma</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER COLLATION</command> modifie la définition d'une
   collation.
  </para>

  <para>
   Pour pouvoir utiliser la commande <command>ALTER COLLATION</command>, vous devez être propriétaire de la collation.
   Pour en modifier le propriétaire, vous devez également être un membre direct ou indirect du nouveau
   rôle propriétaire, et ce rôle doit détenir le privilège <literal>CREATE</literal>
   sur le schéma de la collation. (Ces restrictions ont pour effet que vous ne pouvez effectuer aucune modification
   de propriétaire qui serait impossible en supprimant et en recréant la collation.
   Cependant, un super-utilisateur peut modifier le propriétaire de n'importe
   quelle collation, quoi qu'il arrive.)
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement précédé par le schéma) d'une collation existante.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_nom</replaceable></term>
    <listitem>
     <para>
      Le nouveau nom de la collation.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
    <listitem>
     <para>
      Le nouveau propriétaire de la collation.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_schéma</replaceable></term>
    <listitem>
     <para>
      Le nouveau schéma de la collation.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>REFRESH VERSION</literal></term>
    <listitem>
     <para>
      Updated the collation version.
      See <xref linkend="sql-altercollation-notes"
      endterm="sql-altercollation-notes-title"/> below.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="sql-altercollation-notes">
  <title id="sql-altercollation-notes-title">Notes</title>

  <para>
   When using collations provided by the ICU library, the ICU-specific version
   of the collator is recorded in the system catalog when the collation object
   is created.  When the collation is then used, the current version is
   checked against the recorded version, and a warning is issued when there is
   a mismatch, for example:
<screen>
WARNING:  ICU collator version mismatch
DETAIL:  The database was created using version 1.2.3.4, the library provides version 2.3.4.5.
HINT:  Rebuild all objects affected by this collation and run ALTER COLLATION pg_catalog."xx-x-icu" REFRESH VERSION, or build PostgreSQL with the right version of ICU.
</screen>
   A change in collation definitions can lead to corrupt indexes and other
   problems where the database system relies on stored objects having a
   certain sort order.  Generally, this should be avoided, but it can happen
   in legitimate circumstances, such as when
   using <command>pg_upgrade</command> to upgrade to server binaries linked
   with a newer version of ICU.  When this happens, all objects depending on
   the collation should be rebuilt, for example,
   using <command>REINDEX</command>.  When that is done, the collation version
   can be refreshed using the command <literal>ALTER COLLATION ... REFRESH
   VERSION</literal>.  This will update the system catalog to record the
   current collator version and will make the warning go away.  Note that this
   does not actually check whether all affected objects have been rebuilt
   correctly.
  </para>

  <para>
   The following query can be used to identify all collations in the current
   database that need to be refreshed and the objects that depend on them:
<programlisting><![CDATA[
SELECT pg_describe_object(refclassid, refobjid, refobjsubid) AS "Collation",
       pg_describe_object(classid, objid, objsubid) AS "Object"
  FROM pg_depend d JOIN pg_collation c
       ON refclassid = 'pg_collation'::regclass AND refobjid = c.oid
  WHERE c.collversion <> pg_collation_actual_version(c.oid)
  ORDER BY 1, 2;
]]></programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour renommer la collation <literal>de_DE</literal> en
   <literal>german</literal>:
   <programlisting>
ALTER COLLATION "de_DE" RENAME TO german;
   </programlisting>
  </para>

  <para>
   Pour donner la propriété de la collation <literal>en_US</literal> en
   <literal>joe</literal>:
   <programlisting>
ALTER COLLATION "en_US" OWNER TO joe;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'y a pas de commande <command>ALTER COLLATION</command> dans
   le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir également</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createcollation"/></member>
   <member><xref linkend="sql-dropcollation"/></member>
  </simplelist>
 </refsect1>
</refentry>
