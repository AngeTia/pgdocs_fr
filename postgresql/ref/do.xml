<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/do.sgml,v 1.6 2010-04-03 07:23:00 petere Exp $
PostgreSQL documentation
-->

<refentry id="sql-do">
 <refmeta>
  <refentrytitle>DO</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL -  Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DO</refname>
  <refpurpose>exÃ©cute un bloc de code anonyme</refpurpose>
 </refnamediv>

 <indexterm zone="sql-do">
  <primary>DO</primary>
 </indexterm>

 <indexterm zone="sql-do">
  <primary>blocs de code anonymes</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DO [ LANGUAGE <replaceable class="PARAMETER">nom_langage</replaceable> ] <replaceable class="PARAMETER">code</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>DO</command> exÃ©cute un bloc de code anonyme, autrement dit une
   fonction temporaire dans le langage de procÃ©dure indiquÃ©.
  </para>

  <para>
   Le bloc de code est traitÃ© comme le corps d'une fonction sans paramÃštre et
   renvoyant <type>void</type>. Il est analysÃ© et exÃ©cutÃ© une seule fois.
  </para>

  <para>
   La clause <literal>LANGUAGE</literal> optionnelle est utilisable avant ou
   aprÃšs le bloc de code.
  </para>
 </refsect1>

 <refsect1>
  <title>ParamÃštres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">code</replaceable></term>
    <listitem>
     <para>
      Le code Ã  exÃ©cuter. Il doit Ãªtre spÃ©cifiÃ© comme une chaÃ®ne litÃ©rale,
      tout comme une fonction <command>CREATE FUNCTION</command>. L'utilisation
      de la syntaxe des guillemets dollar est recommandÃ©e.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">nom_langage</replaceable></term>
    <listitem>
     <para>
      Le nom du langage utilisÃ© par le code. Par dÃ©faut Ã 
      <literal>plpgsql</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Le langage de procÃ©dure utilisÃ© doit dÃ©jÃ  Ãªtre installÃ© dans la base de
   donnÃ©es avec l'instruction <command>CREATE LANGUAGE</command>.
   <literal>plpgsql</literal> est installÃ© par dÃ©faut contrairement aux autres
   langages.
  </para>

  <para>
   L'utilisateur doit avoir le droit <literal>USAGE</literal> sur le langage
   de procÃ©dures ou Ãªtre un superutilisateur s'il ne s'agit pas d'un langage
   de confiance. Il s'agit des mÃªmes prÃ©requis que pour la crÃ©ation d'une
   fonction dans ce langage.
  </para>
 </refsect1>

 <refsect1 id="sql-do-examples">
  <title id="sql-do-examples-title">Exemples</title>
  <para>
   Donner les droits sur toutes les vues du schÃ©ma <literal>public</literal>
   au rÃŽle <literal>webuser</literal>&nbsp;:
<programlisting>
DO $$DECLARE r record;
BEGIN
    FOR r IN SELECT table_schema, table_name FROM information_schema.tables
             WHERE table_type = 'VIEW' AND table_schema = 'public'
    LOOP
        EXECUTE 'GRANT ALL ON ' || quote_ident(r.table_schema) || '.' || quote_ident(r.table_name) || ' TO webuser';
    END LOOP;
END$$;
</programlisting>
  </para>
 </refsect1>
 <refsect1>
  <title>CompatibilitÃ©</title>

  <para>
   Il n'existe pas d'instruction <command>DO</command> dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createlanguage" /></member>
  </simplelist>
 </refsect1>
</refentry>
