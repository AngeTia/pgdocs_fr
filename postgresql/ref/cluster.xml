<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20070921, PG825 -->

<refentry id="sql-cluster">
 <refmeta>
  <refentrytitle>CLUSTER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CLUSTER</refname>
  <refpurpose>Réorganiser une table en fonction d'un index</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>CLUSTER [VERBOSE] <replaceable class="PARAMETER">nom_table</replaceable> [ USING <replaceable class="PARAMETER">nom_index</replaceable> ]
CLUSTER [VERBOSE]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-cluster">
   <primary>CLUSTER</primary>
  </indexterm>

  <para>
   <command>CLUSTER</command> réorganise (groupe) la table 
   <replaceable class="parameter">nom_table</replaceable>
   en fonction de l'index <replaceable class="parameter">nom_index</replaceable>. L'index doit avoir été 
   préalablement défini sur <replaceable class="parameter">nom_table</replaceable>.
  </para>

  <para>
   Une table reorganisée est physiquement réordonnée en fonction des informations de l'index.
   Ce regroupement est une opération ponctuelle&nbsp;:
   les actualisations ultérieures ne sont pas réorganisées. C'est-à-dire
   qu'aucune tentative n'est réalisée pour stocker les lignes nouvelles ou actualisées
   d'après l'ordre de l'index. (Une réorganisation périodique peut être
   obtenue en relançant la commande aussi souvent que souhaité. De plus,
   configurer le paramètre <literal>FILLFACTOR</literal> à moins de 100%
   peut aider à préserver l'ordre du cluster lors des mises à jour car les
   lignes mises à jour sont conservées dans la même page si suffisamment
   d'espace est disponible ici.)
  </para>

  <para>
   Quand une table est réorganisée, <productname>PostgreSQL</productname> 
   enregistre l'index utilisé à cet effet. La forme
   <command>CLUSTER <replaceable class="parameter">nom_table</replaceable></command>
   réorganise la table en utilisant le même index qu'auparavant. Vous pouvez
   aussi utiliser les formes <literal>CLUSTER</literal> ou <literal>SET
   WITHOUT CLUSTER</literal> de <xref linkend="sql-altertable"/> pour
   initialiser l'index de façon à ce qu'il soit intégré aux prochaines
   opérations cluster our pour supprimer tout précédent paramètre.
  </para>

  <para>
   <command>CLUSTER</command>, sans paramètre, réorganise toutes les tables de
   la base de données courante qui ont déjà été réorganisées et dont
   l'utilisateur est propriétaire, ou toutes les tables s'il s'agit d'un
   superutilisateur. Cette forme de <command>CLUSTER</command> ne peut pas être
   exécutée à l'intérieur d'une transaction.
  </para>

  <para>
   Quand une table est en cours de réorganisation, un verrou
   <literal>ACCESS EXCLUSIVE</literal> est acquis. Cela empêche toute opération
   sur la table (à la fois en lecture et en écriture) pendant l'exécution de 
   <command>CLUSTER</command>.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom_table</replaceable></term>
    <listitem>
     <para>
      Le nom d'une table (éventuellement qualifié du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_index</replaceable></term>
    <listitem>
     <para>
      Le nom d'un index.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche la progression pour chaque table traitée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

   <para>
    Lorsque les lignes d'une table sont accédées aléatoirement et unitairement,
    l'ordre réel des données dans la table n'a que peu d'importance.
    Toutefois, si certaines données sont plus accédées que d'autres, et qu'un
    index les regroupe, l'utilisation de <command>CLUSTER</command> peut s'avérer
    bénéfique. Si une requête porte sur un ensemble de valeurs indexées ou sur
    une seule valeur pour laquelle plusieurs lignes de la table correspondent,
    <command>CLUSTER</command> est utile. En effet, lorsque l'index
    identifie la page de la table pour la première ligne correspondante, toutes
    les autres lignes correspondantes sont déjà probablement sur la même page
    de table, ce qui diminue les accès disque et accélère la requête.
   </para>

   <para>
    <command>CLUSTER</command> can re-sort the table using either an indexscan
    on the specified index, or (if the index is a b-tree) a sequential
    scan followed by sorting.  It will attempt to choose the method that
    will be faster, based on planner cost parameters and available statistical
    information.
   </para>

   <para>
    When an indexscan is used, a temporary copy of the table is created that
    contains the table data in the index order.  Temporary copies of each
    index on the table are created as well.  Therefore, you need free space on
    disk at least equal to the sum of the table size and the index sizes.
   </para>

   <para>
    When a sequential scan and sort is used, a temporary sort file is
    also created, so that the peak temporary space requirement is as much
    as double the table size, plus the index sizes.  This method is often
    faster than the indexscan method, but if the disk space requirement is
    intolerable, you can disable this choice by temporarily setting <xref
    linkend="guc-enable-sort"/> to <literal>off</literal>.
   </para>

   <para>
    It is advisable to set <xref linkend="guc-maintenance-work-mem"/> to
    a reasonably large value (but not more than the amount of RAM you can
    dedicate to the <command>CLUSTER</command> operation) before clustering.
   </para>

   <para>
    Puisque le planificateur enregistre les statistiques d'ordonnancement
    des tables, il est conseillé de lancer
    <xref linkend="sql-analyze"/> sur la table
    nouvellement réorganisée. Dans le cas contraire, les plans de requêtes
    peuvent être mal choisis par le planificateur.
   </para>

   <para>
    Because <command>CLUSTER</command> remembers which indexes are clustered,
    one can cluster the tables one wants clustered manually the first time,
    then set up a periodic maintenance script that executes
    <command>CLUSTER</command> without any parameters, so that the desired tables
    are periodically reclustered.
   </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Réorganiser la table <literal>employes</literal> sur la base de son index
   <literal>employes_ind</literal>&nbsp;:
   <programlisting>CLUSTER employes ON employes_ind;
</programlisting>
  </para>

  <para>
   Réorganiser la relation <literal>employes</literal> en utilisant le même index
   que précédemment&nbsp;:
<programlisting>CLUSTER employes;
</programlisting>
  </para>

  <para>
   Réorganiser toutes les tables de la base de données qui ont déjà été préalablement
   réorganisées&nbsp;:
<programlisting>CLUSTER;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe pas d'instruction <command>CLUSTER</command> dans le standard
   SQL.
  </para>

  <para>
   La syntaxe
<synopsis>
CLUSTER <replaceable class="parameter">nom_index</replaceable> ON <replaceable class="parameter">nom_table</replaceable>
</synopsis>
  est aussi supportée pour la compatibilité avec les versions de
  <productname>PostgreSQL</productname> antérieures à la 8.3.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-clusterdb"/></member>
  </simplelist>
 </refsect1>
</refentry>
