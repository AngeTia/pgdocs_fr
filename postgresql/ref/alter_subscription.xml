<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-altersubscription">
 <indexterm zone="sql-altersubscription">
  <primary>ALTER SUBSCRIPTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER SUBSCRIPTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER SUBSCRIPTION</refname>
  <refpurpose>modifier la définition d'une souscription</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> CONNECTION '<replaceable>conninfo</replaceable>'
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> SET PUBLICATION <replaceable class="parameter">nom_publication</replaceable> [, ...] [ WITH ( <replaceable class="parameter">option_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> ADD PUBLICATION <replaceable class="parameter">nom_publication</replaceable> [, ...] [ WITH ( <replaceable class="parameter">option_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> DROP PUBLICATION <replaceable class="parameter">nom_publication</replaceable> [, ...] [ WITH ( <replaceable class="parameter">option_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> REFRESH PUBLICATION [ WITH ( <replaceable class="parameter">option_rafraichissement</replaceable> [= <replaceable class="parameter">value</replaceable>] [, ... ] ) ]
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> ENABLE
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> DISABLE
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> SET ( <replaceable class="parameter">subscription_parameter</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )
ALTER SUBSCRIPTION <replaceable class="parameter">name</replaceable> SKIP ( <replaceable class="parameter">skip_option</replaceable> = <replaceable class="parameter">value</replaceable> )
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> OWNER TO { <replaceable>nouveau_proprietaire</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER SUBSCRIPTION <replaceable class="parameter">nom</replaceable> RENAME TO <replaceable>nouveau_nom</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER SUBSCRIPTION</command> peut changer la plupart des
   propriétés d'un souscription pouvant être spécifiées dans <xref
   linkend="sql-createsubscription"/>.
  </para>

  <para>
   Vous devez être le propriétaire de la souscription pour utiliser
   <command>ALTER SUBSCRIPTION</command>. Pour modifier le propriétaire, vous
   devez également être un membre direct ou indirect du nouveau rôle
   propriétaire.  Le nouveau propriétaire doit être un super-utilisateur.
   (Actuellement, tous les propriétaires de souscription doivent être
   super-utilisateurs, donc les vérifications du propriétaire seront en fait
   contournées. Mais ceci pourrait changer dans le futur.)
  </para>

  <para>
   Lors du rafraichissement d'une publication, nous supprimons les relations
   qui ne font plus partie de la publication, et nous supprimons aussi les
   slots de synchronisation de table s'il en existe. Il est nécessaire de
   supprimer ces slots pour que les ressources allouées à la souscription sur
   l'hôte distant soient rendues. Si à cause d'erreurs réseau ou autres,
   <productname>PostgreSQL</productname> est incapable de supprimer les
   slots, un message d'erreur sera renvoyé. Pour continuer, l'utilisateur
   doit soit tenter une nouvelle fois l'opération, soit dissocier le slot de
   la souscription et supprimer la souscription comme expliquée dans <xref
   linkend="sql-dropsubscription"/>.
  </para>

  <para>
   Les commandes <command>ALTER SUBSCRIPTION ... REFRESH PUBLICATION</command>
   et <command>ALTER SUBSCRIPTION ...{SET|ADD|DROP} PUBLICATION ...</command>
   avec l'option <literal>refresh</literal> activée ne peuvent pas être
   exécutées dans un bloc de transaction.

   These commands also cannot be executed when the subscription has
   <literal>two_phase</literal> commit enabled,
   unless <literal>copy_data</literal> is <literal>false</literal>.
   See column <structfield>subtwophasestate</structfield> of
   <link linkend="catalog-pg-subscription"><structname>pg_subscription</structname></link>
   to know the actual two-phase state.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la souscription dont la propriété doit être modifiée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CONNECTION '<replaceable class="parameter">conninfo</replaceable>'</literal></term>
    <listitem>
     <para>
      Cette clause remplace la propriété de connexion positionnée à l'origine par
      <xref linkend="sql-createsubscription"/>.  S'y référer pour plus
      d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET PUBLICATION <replaceable class="parameter">nom_publication</replaceable></literal></term>
    <term><literal>ADD PUBLICATION <replaceable class="parameter">nom_publication</replaceable></literal></term>
    <term><literal>DROP PUBLICATION <replaceable class="parameter">nom_publication</replaceable></literal></term>
    <listitem>
     <para>
      Ces syntaxes changent la liste des publications souscrites. <literal>SET</literal>
      remplace la liste entière des publications avec une nouvelle liste,
      <literal>ADD</literal> ajoute des publications supplémentaires à la
      liste de publications, et <literal>DROP</literal> supprime des
      publications de la liste des publications.
      We allow non-existent publications to be
      specified in <literal>ADD</literal> and <literal>SET</literal> variants
      so that users can add those later.
      Voir <xref
      linkend="sql-createsubscription"/> pour plus d'informations. Par
      défaut, cette commande agira aussi comme <literal>REFRESH
      PUBLICATION</literal>.
     </para>

     <para>
      <replaceable>option_publication</replaceable> indique des
      options supplémentaires pour cette opération. Les options supportées
      sont&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>refresh</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Si false, la commande n'essaiera pas de rafraichir des informations
          des tables. <literal>REFRESH PUBLICATION</literal> devrait alors
          être exécutée séparément. La valeur par défaut est
          <literal>true</literal>.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>

      De plus, les options décrites sous <literal>REFRESH
      PUBLICATION</literal> peuvent être spécifiées pour contrôler
      l'opération implicite de rafraichissement.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>REFRESH PUBLICATION</literal></term>
    <listitem>
     <para>
      Récupère les informations de table manquante depuis la publication.  Cela
      commencera la réplication des tables qui avaient été ajoutées en tant que
      souscription aux publications depuis <command>CREATE
      SUBSCRIPTION</command> ou depuis la dernière exécution de <command>REFRESH
      PUBLICATION</command>.
     </para>

     <para>
      <replaceable>option_rafraichissement</replaceable> spécifie les options
      supplémentaires pour l'opération de rafraîchissement.  Les options
      supportées sont&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>copy_data</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Specifies whether to copy pre-existing data in the publications
          that are being subscribed to when the replication starts.
          The default is <literal>true</literal>.
         </para>
         <para>
          Previously subscribed tables are not copied, even if a table's row
          filter <literal>WHERE</literal> clause has since been modified.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ENABLE</literal></term>
    <listitem>
     <para>
      Active une souscription précédemment désactivée, démarrant le worker de
      réplication logique à la fin de la transaction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal></term>
    <listitem>
     <para>
      Désactive une souscription en cours d'exécution, arrêtant le worker de
      réplication logique à la fin de la transaction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">subscription_parameter</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause change les paramètres initialement positionnés par
      <xref linkend="sql-createsubscription"/>.  S'y référer pour plus
      d'informations. Les paramètres modifiables sont
      are <literal>slot_name</literal>,
      <literal>synchronous_commit</literal>,
      <literal>binary</literal>,
      <literal>streaming</literal> et
      <literal>disable_on_error</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SKIP ( <replaceable class="parameter">skip_option</replaceable> = <replaceable class="parameter">value</replaceable> )</literal></term>
    <listitem>
     <para>
      Skips applying all changes of the remote transaction.  If incoming data
      violates any constraints, logical replication will stop until it is
      resolved.  By using the <command>ALTER SUBSCRIPTION ... SKIP</command> command,
      the logical replication worker skips all data modification changes within
      the transaction.  This option has no effect on the transactions that are
      already prepared by enabling <literal>two_phase</literal> on
      subscriber.
      After the logical replication worker successfully skips the transaction or
      finishes a transaction, the LSN (stored in
      <structname>pg_subscription</structname>.<structfield>subskiplsn</structfield>)
      is cleared.  See <xref linkend="logical-replication-conflicts"/> for
      the details of logical replication conflicts.  Using this command requires
      superuser privilege.
     </para>

     <para>
      <replaceable>skip_option</replaceable> specifies options for this operation.
      The supported option is:

      <variablelist>
       <varlistentry>
        <term><literal>lsn</literal> (<type>pg_lsn</type>)</term>
        <listitem>
         <para>
          Specifies the finish LSN of the remote transaction whose changes
          are to be skipped by the logical replication worker.  The finish LSN
          is the LSN at which the transaction is either committed or prepared.
          Skipping individual subtransactions is not supported.  Setting
          <literal>NONE</literal> resets the LSN.
         </para>
        </listitem>
       </varlistentry>
      </variablelist></para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_proprietaire</replaceable></term>
    <listitem>
     <para>
      Le nom d'utilisateur du nouveau propriétaire de la souscription.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_nom</replaceable></term>
    <listitem>
     <para>
      Le nouveau nom de la souscription.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Changer la publicatio souscrites par une publication en
   <literal>insert_only</literal> :
   <programlisting>
ALTER SUBSCRIPTION mysub SET PUBLICATION insert_only;
   </programlisting>
  </para>

  <para>
   Désactive (stoppe) la souscription :
   <programlisting>
ALTER SUBSCRIPTION mysub DISABLE;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>ALTER SUBSCRIPTION</command> est une extension <productname>PostgreSQL</productname>
   au standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createsubscription"/></member>
   <member><xref linkend="sql-dropsubscription"/></member>
   <member><xref linkend="sql-createpublication"/></member>
   <member><xref linkend="sql-alterpublication"/></member>
  </simplelist>
 </refsect1>
</refentry>
