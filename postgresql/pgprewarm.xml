<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/pgprewarm.sgml -->

<sect1 id="pgprewarm" xreflabel="pg_prewarm">
 <title>pg_prewarm</title>

 <indexterm zone="pgprewarm">
  <primary>pg_prewarm</primary>
 </indexterm>

 <para>
  Le module <filename>pg_prewarm</filename> fournit un moyen pratique
  de charger des données des relations dans le cache de données du système
  d'exploitation ou dans le cache de données de
  <productname>PostgreSQL</productname>. Prewarming
  can be performed manually using the <filename>pg_prewarm</filename> function,
  or can be performed automatically by including <literal>pg_prewarm</literal> in
  <xref linkend="guc-shared-preload-libraries"/>.  In the latter case, the
  system will run a background worker which periodically records the contents
  of shared buffers in a file called <filename>autoprewarm.blocks</filename> and
  will, using 2 background workers, reload those same blocks after a restart.
 </para>

 <sect2>
  <title>Fonctions</title>

  <synopsis>
pg_prewarm(regclass, mode text default 'buffer', fork text default 'main',
           first_block int8 default null,
           last_block int8 default null) RETURNS int8
  </synopsis>

  <para>
   Le premier argument est la relation qui doit être préchargée. Le
   second est la méthode de préchargement à utiliser,
   comme décrit plus bas. Le troisième argument correspond au type de
   fichier à précharger (généralement <literal>main</literal>). Le quatrième
   argument est le numéro du premier bloc à précharger
   (<literal>NULL</literal> est accepté comme synonyme de zéro). Le cinquième
   argument correspond au dernier numéro de bloc à précharger
   (<literal>NULL</literal> signifie que l'on précharge jusqu'au dernier bloc
   dans la relation). La valeur retournée correspond au nombre de blocs
   préchargés.
  </para>

  <para>
   Il y a trois méthodes de préchargement disponibles.
   <literal>prefetch</literal> envoie une requête de prélecture asynchrone au
   système d'exploitation si celui-ci le supporte ou sinon renvoie une erreur.
   <literal>read</literal> lit l'intervalle de blocs demandé. Contrairement à
   <literal>prefetch</literal>, toutes les plateformes et options de compilation
   le supportent, mais cette méthode peut être plus lente.
   <literal>buffer</literal> lit l'intervalle de blocs demandé pour le charger
   dans le cache de données de la base.
  </para>

  <para>
   Il est à noter qu'avec n'importe laquelle de ces méthodes, tenter de
   précharger plus de blocs qu'il n'est possible de mettre en cache &mdash; par
   le système d'exploitation en utilisant <literal>prefetch</literal> ou
   <literal>read</literal>, ou par <productname>PostgreSQL</productname> en
   utilisant <literal>buffer</literal> &mdash; aura probablement pour effet
   d'expulser du cache les blocs de numéro inférieur au fur et à mesure que
   les blocs de numéros supérieurs seront lus. De plus, les données
   préchargées ne bénéficient d'aucune protection spécifique contre l'éviction
   du cache. Il est donc possible que d'autres activités du
   système d'exploitation puissent évincer du cache les données fraîchement
   préchargées peu après leur lecture. Pour toutes ces
   raisons, le préchargement est typiquement plus utile au démarrage, quand
   les caches sont majoritairement vides.
  </para>

<synopsis>
autoprewarm_start_worker() RETURNS void
</synopsis>

  <para>
   Launch the main autoprewarm worker.  This will normally happen
   automatically, but is useful if automatic prewarm was not configured at
   server startup time and you wish to start up the worker at a later time.
  </para>

<synopsis>
autoprewarm_dump_now() RETURNS int8
</synopsis>

  <para>
   Update <filename>autoprewarm.blocks</filename> immediately.  This may be useful
   if the autoprewarm worker is not running but you anticipate running it
   after the next restart.  The return value is the number of records written
   to <filename>autoprewarm.blocks</filename>.
  </para>
 </sect2>

 <sect2>
  <title>Configuration Parameters</title>

 <variablelist>
   <varlistentry>
    <term>
     <varname>pg_prewarm.autoprewarm</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_prewarm.autoprewarm</varname> configuration parameter</primary>
     </indexterm>
    </term>
    <listitem>
     <para>
      Controls whether the server should run the autoprewarm worker. This is
      on by default. This parameter can only be set at server start.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <varlistentry>
   <term>
     <varname>pg_prewarm.autoprewarm_interval</varname> (<type>int</type>)
     <indexterm>
      <primary><varname>pg_prewarm.autoprewarm_interval</varname> configuration parameter</primary>
     </indexterm>
    </term>
    <listitem>
     <para>
      This is the interval between updates to <literal>autoprewarm.blocks</literal>.
      The default is 300 seconds. If set to 0, the file will not be
      dumped at regular intervals, but only when the server is shut down.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

 </sect2>

 <sect2>
  <title>Auteur</title>

  <para>
   Robert Haas <email>rhaas@postgresql.org</email>
  </para>
 </sect2>

</sect1>
